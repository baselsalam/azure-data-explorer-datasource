{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@grafana/ui\"","webpack:///external \"emotion\"","webpack:///external \"lodash\"","webpack:///external \"@grafana/data\"","webpack:///external \"@grafana/runtime\"","webpack:///external \"app/core/config\"","webpack:///../node_modules/react-use/node_modules/tslib/tslib.es6.js","webpack:///../node_modules/debounce-promise/dist/index.js","webpack:///external \"angular\"","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./editor/expressions.ts","webpack:///./response_parser.ts","webpack:///./types.ts","webpack:///./common/annotationsFromFrame.ts","webpack:///./query_builder.ts","webpack:///./schema/cache.ts","webpack:///./editor/types.ts","webpack:///./editor/guards.ts","webpack:///./KustoExpressionParser.ts","webpack:///./schema/mapper.ts","webpack:///./schema/AdxSchemaMapper.ts","webpack:///./datasource.ts","webpack:///./common/responseHelpers.ts","webpack:///../node_modules/react-use/esm/useAsyncFn.js","webpack:///../node_modules/react-use/esm/useMountedState.js","webpack:///../node_modules/react-use/esm/useAsync.js","webpack:///./monaco/kusto_code_editor.ts","webpack:///./monaco/KustoMonacoEditor.tsx","webpack:///./components/QueryEditorResultFormat.tsx","webpack:///./components/RawQueryEditor.tsx","webpack:///./editor/components/QueryEditorSection.tsx","webpack:///./editor/components/field/QueryEditorField.tsx","webpack:///./editor/components/field/QueryEditorFieldSection.tsx","webpack:///./editor/builders/QueryEditorFieldBuilder.ts","webpack:///./editor/components/operators/QueryEditorMultiOperator.tsx","webpack:///./editor/components/operators/QueryEditorSingleOperator.tsx","webpack:///./editor/components/operators/QueryEditorBoolOperator.tsx","webpack:///./editor/components/operators/parser.ts","webpack:///./editor/components/operators/QueryEditorStringOperator.tsx","webpack:///./editor/components/operators/QueryEditorNumberOperator.tsx","webpack:///./editor/components/operators/QueryEditorOperator.tsx","webpack:///./editor/components/filter/QueryEditorFieldAndOperator.tsx","webpack:///./editor/components/QueryEditorRepeater.tsx","webpack:///./editor/components/filter/QueryEditorFilterSection.tsx","webpack:///./editor/builders/QueryEditorOperatorBuilder.ts","webpack:///./editor/builders/QueryEditorFilterBuilder.ts","webpack:///./editor/components/field/QueryEditorFunctionParameterSection.tsx","webpack:///./editor/components/reduce/QueryEditorReduce.tsx","webpack:///./editor/components/reduce/QueryEditorReduceSection.tsx","webpack:///./editor/builders/QueryEditorFunctionBuilder.tsx","webpack:///./editor/builders/QueryEditorReduceBuilder.ts","webpack:///./editor/components/groupBy/QueryEditorGroupBy.tsx","webpack:///./editor/components/groupBy/QueryEditorGroupBySection.tsx","webpack:///./editor/builders/QueryEditorIntervalBuilder.ts","webpack:///./editor/builders/QueryEditorGroupByBuilder.ts","webpack:///./components/VisualQueryEditorSections.tsx","webpack:///./editor/index.ts","webpack:///./schema/AdxSchemaResolver.ts","webpack:///./components/SchemaMessages.tsx","webpack:///./components/VisualQueryEditor.tsx","webpack:///./components/QueryEditorToolbar.tsx","webpack:///./migrations/expression.ts","webpack:///./migrations/query.ts","webpack:///./QueryEditor.tsx","webpack:///./version.ts","webpack:///./config_ctrl.ts","webpack:///./monaco/kusto_monaco_editor.ts","webpack:///./annotations_query_ctrl.ts","webpack:///./module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__5__","__WEBPACK_EXTERNAL_MODULE__6__","__assign","assign","arguments","length","apply","this","getWait","wait","defer","deferred","promise","Promise","resolve","reject","fn","undefined","options","lastCallAt","timer","pendingArgs","currentWait","currentTime","Date","getTime","isCold","_len","args","Array","_key","leading","accumulate","then","result","concat","clearTimeout","push","setTimeout","flush","argsIndex","results","thisDeferred","__WEBPACK_EXTERNAL_MODULE__9__","extendStatics","b","setPrototypeOf","__proto__","__extends","__","constructor","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","done","__generator","body","f","y","g","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","__values","__read","ar","error","__spread","__makeTemplateObject","cooked","raw","QueryEditorExpressionType","parseDatabases","databases","data","Tables","table","Rows","row","text","parseSchemaResult","schemaJson","JSON","parse","EditorMode","packageJson","SchemaMappingType","defaultQuery","query","querySource","Raw","expression","where","type","And","expressions","groupBy","reduce","pluginVersion","version","defaultAnnotationEventFinder","userId","login","email","avatarUrl","time","timeEnd","title","tags","interpolateKustoQuery","scopedVars","replace","match","p1","p2","inputs","firstCommaIndex","field","substring","templateVar","toLowerCase","trim","singleQuote","getMultiContains","values","split","map","join","input","QueryEditorPropertyType","store","resolver","refresh","Reduce","Property","Operator","GroupBy","isMultiOperator","operator","isArray","Or","isArrayExpression","templateSrv","toAutoCompleteQuery","tableSchema","from","search","context","timeColumn","castIfDynamic","column","parts","appendProperty","appendTimeFilter","index","appendWhere","toQuery","timeshift","appendTimeshift","appendSummarize","appendOrderBy","detectTimeshift","isDynamic","noGroupBy","noReduce","find","exp","interval","prefix","forEach","appendOperator","countAddedInReduce","reduceParts","groupByParts","columns","func","parameters","funcParams","formatValue","unshift","withPrefix","isTemplateVariable","Number","Boolean","getVariables","variable","id","groupByTimeColumn","DateTime","firstLevelColumn","col","CslType","Name","toDynamic","columnSchema","part","keys","parseInt","current","timeshiftWith","test","database","String","kustoType","enabled","mappings","mappingsByDatabase","displayNameToMapping","nameToMapping","valueToMapping","mapping","displayName","getMappingByValue","getTableOptions","schema","databaseName","Databases","all","materializedView","MaterializedViews","Functions","instanceSettings","useSchemaMapping","jsonData","schemaMapping","schemaMappings","backendSrv","baseUrl","defaultOrFirstDatabase","defaultDatabase","url","defaultEditorMode","Visual","schemaMapper","expressionParser","parseExpression","autoCompleteQuery","getSchemaMapper","filterQuery","target","hide","rawMode","tableExpr","applyTemplateVariables","q","interpolateVariable","annotationQuery","annotation","resultFormat","targets","range","maxDataPoints","intervalMs","toPromise","res","state","Done","frame","events","hasTime","hasText","byName","fields","finder","entries","lower","regex","RegExp","anno","exec","getAnnotationsFromFrame","Error","console","log","message","metricFindQuery","optionalOptions","getDatabases","getDefaultOrFirstDatabase","buildQuery","response","firstStringFieldToMetricFindValue","err","req","csl","doRequest","getSchema","refreshCache","getFunctionSchema","targetFunction","queryParts","getDynamicSchema","source","project","summarize","interpolatedQuery","refId","maxRetries","datasourceRequest","method","multi","includeAll","val","escapeSpecial","filter","sections","getDefaultEditorMode","autoQuery","kustQuery","toArray","sortStartsWithValuesFirst","frames","nameIndex","findIndex","typeIndex","json","columnSchemas","columnName","recordSchema","option","timeRange","arr","searchText","sort","a","aLower","bLower","startsWith","includes","useAsyncFn","deps","initialState","loading","mountedRef","lastCallId","isMounted","_a","set","_i","callId","prevState","useAsync","callback","containerDiv","defaultTimeField","config","splitWithNewLineRegex","newLineRegex","startsWithKustoPipeRegex","kustoPipeRegexStrict","initMonaco","content","themeName","bootData","user","lightTheme","monaco","editor","defineTheme","base","inherit","rules","token","foreground","background","colors","languages","kustoDefaults","setLanguageSettings","includeControlCommands","newlineAfterPipe","useIntellisenseV2","codeEditor","language","selectionHighlight","theme","folding","lineNumbers","lineHeight","suggestFontSize","dragAndDrop","occurrencesHighlight","minimap","renderIndentGuides","wordWrap","layout","getModels","completionItemProvider","registerCompletionItemProvider","triggerCharacters","provideCompletionItems","getCompletionItems","signatureHelpProvider","registerSignatureHelpProvider","signatureHelpTriggerCharacters","provideSignatureHelp","getSignatureHelp","createContextKey","onDidChangeCursorSelection","event","getKustoWorker","workerAccessor","model","getModel","uri","worker","dbName","setSchemaFromShowSchema","resize","setOnDidChangeModelContent","listener","onDidChangeModelContent","disposeMonaco","dispose","addCommand","keybinding","commandFunc","getValue","toSuggestionController","srv","setEditorContent","setValue","position","timeFilterDocs","textUntilPosition","getValueInRange","startLineNumber","startColumn","endLineNumber","lineNumber","endColumn","getLineContent","kind","CompletionItemKind","Keyword","insertText","documentation","activeParameter","activeSignature","signatures","reason","CursorChangeReason","RecoverFromMarkers","getCharAt","selection","positionLineNumber","positionColumn","triggerSuggestions","suggestController","getContribution","convertedController","_model","cancel","trigger","getLineCount","line","props","getStyles","styles","monacoRef","createRef","window","System","pluginBaseUrl","kustoCodeEditor","KeyMod","Shift","KeyCode","Enter","newValue","onChange","onExecute","onresize","componentWillUnmount","render","tabIndex","className","ref","Component","formats","adxTimeFormat","onChangeFormat","onFormatChange","selectable","container","width","includeAdxTimeFormat","format","selectResultFormat","includeAdxFormat","selected","onRawQueryChange","kql","onChangeResultFormat","datasource","lastQueryError","lastQuery","timeNotASC","showLastQuery","showHelp","meta","onRunQuery","toolbar","onClick","setState","children","definitionToProperty","definition","propsValue","allowCustom","placeholder","templateVariableOptions","propsOnChange","prevValue","setPrevValue","loadOptions","onCloseMenu","defaultOptions","menuPlacement","allowCustomValue","backspaceRemovesValue","isClearable","currentValue","textSearchingFor","allOptions","exactMatchOptions","anyMatchOptions","sortedOptions","Set","build","defaultValue","buildFieldExpression","onCreate","getSuggestions","txt","isLoading","onOpenMenu","onCreateOption","noOptionsMessage","evt","multipleValues","casted","isUndefined","isNumber","toNumber","comparable","toLower","operatorValue","onChangeInput","currentTarget","onBlurInput","onBlur","parseToNumber","isNaN","definitionToOperator","booleanValues","onChangeOperator","operators","onChangeValue","isSearchable","renderControl","forwardRef","otherProps","variant","propertyType","isBoolOperator","isSingleOperator","componentDidMount","updateOperators","supportTypes","onFieldChanged","currentOperator","onOperatorChange","variables","showOperators","splice","idx","Fragment","onAdd","onRemove","rowWithSpacing","spacing","types","description","multiple","bool","withLabel","withDescription","add","withOperators","QueyEditorOperatorBuilder","withMultipleRows","buildOperatorExpression","icon","filterProps","operatorProps","isFirst","rowStyles","FunctionParameter","fieldType","functions","setField","setReduce","setParameters","applyOnField","onChangeField","reducer","Function","onChangeReduce","onChangeParameter","payload","reduceParameters","getParameters","params","param","appliedOnField","withParameter","isAppliedOnField","withFunctions","buildReduceExpression","childProps","rowStyle","buildProperty","intervals","setInterval","Interval","onChangeInterval","withIntervals","buildGroupByExpressions","KustoPropertyEditorSection","fieldSection","builder","KustoWhereEditorSection","filterSection","KustoValueColumnEditorSection","reduceSection","KustoGroupByEditorSection","groupBySection","createCacheKey","addition","schemaKey","getTablesForDatabase","db","getViewsForDatabase","getFunctionsForDatabase","getColumnsForTable","tableName","cacheKey","mapper","findSchema","OrderedColumns","dynamicColumns","schemaByColumn","schemaForDynamicColumn","tables","funcs","views","view","OutputColumns","warning","formInputBorderInvalid","palette","yellow","onChangeQuery","datasourceId","tableMapping","timeshiftOptions","getTableSchema","onAutoComplete","groupable","onChangeTable","onWhereChange","onReduceChange","onGroupByChange","onChangeTimeshift","cols","rows","disabled","TimeSpan","dirty","editorMode","onToggleEditorMode","showConfirm","setShowConfirm","onToggleMode","onChangeDatabase","isOpen","confirmText","dismissText","onConfirm","onDismiss","looksLikeV2","migrated","migrateV2Expression","migrateV2Property","isRawMode","series","executedQueryString","executedQuery","kustoError","custom","KustoError","expanded","versionPattern","major","minor","patch","isGtOrEq","compared","SemVersion","isValid","dataConsistency","strongconsistency","weakconsistency","$scope","schemaError","hasRequiredGrafanaVersion","hasMinVersion","suggestUrl","getSuggestUrls","schemaMappingOptions","refreshSchema","editorModes","addSchemaMapping","formatMappingValue","removeSchemaMapping","formatMappingText","functionName","InputParameters","viewName","$digest","buildInfo","latestVersion","showMinVersionWarning","templateUrl","scope","elem","attrs","$watch","oldValue","editorValue","$$postDigest","$apply","$on","onblur","onkeydown","stopPropagation","directive","restrict","template","link","list","setConfigCtrl","setAnnotationQueryCtrl","KustoDBAnnotationsQueryCtrl","setQueryEditor","executedQueryError","templateVariables","isNewQuery","isRawDefaultEditorMode","Message"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","'use strict';\n\n/* global setTimeout, clearTimeout */\n\nmodule.exports = function debounce(fn) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var lastCallAt = void 0;\n  var deferred = void 0;\n  var timer = void 0;\n  var pendingArgs = [];\n  return function debounced() {\n    var currentWait = getWait(wait);\n    var currentTime = new Date().getTime();\n\n    var isCold = !lastCallAt || currentTime - lastCallAt > currentWait;\n\n    lastCallAt = currentTime;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (isCold && options.leading) {\n      return options.accumulate ? Promise.resolve(fn.call(this, [args])).then(function (result) {\n        return result[0];\n      }) : Promise.resolve(fn.call.apply(fn, [this].concat(args)));\n    }\n\n    if (deferred) {\n      clearTimeout(timer);\n    } else {\n      deferred = defer();\n    }\n\n    pendingArgs.push(args);\n    timer = setTimeout(flush.bind(this), currentWait);\n\n    if (options.accumulate) {\n      var argsIndex = pendingArgs.length - 1;\n      return deferred.promise.then(function (results) {\n        return results[argsIndex];\n      });\n    }\n\n    return deferred.promise;\n  };\n\n  function flush() {\n    var thisDeferred = deferred;\n    clearTimeout(timer);\n\n    Promise.resolve(options.accumulate ? fn.call(this, pendingArgs) : fn.apply(this, pendingArgs[pendingArgs.length - 1])).then(thisDeferred.resolve, thisDeferred.reject);\n\n    pendingArgs = [];\n    deferred = null;\n  }\n};\n\nfunction getWait(wait) {\n  return typeof wait === 'function' ? wait() : wait;\n}\n\nfunction defer() {\n  var deferred = {};\n  deferred.promise = new Promise(function (resolve, reject) {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n  return deferred;\n}\n//# sourceMappingURL=index.js.map","module.exports = __WEBPACK_EXTERNAL_MODULE__9__;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { QueryEditorPropertyType, QueryEditorProperty, QueryEditorOperator } from './types';\n\nexport enum QueryEditorExpressionType {\n  Property = 'property',\n  Operator = 'operator',\n  Reduce = 'reduce',\n  FunctionParameter = 'functionParameter',\n  GroupBy = 'groupBy',\n  Or = 'or',\n  And = 'and',\n}\nexport interface QueryEditorExpression {\n  type: QueryEditorExpressionType;\n}\n\nexport interface QueryEditorPropertyExpression extends QueryEditorExpression {\n  property: QueryEditorProperty;\n}\nexport interface QueryEditorOperatorExpression extends QueryEditorExpression {\n  property: QueryEditorProperty;\n  operator: QueryEditorOperator;\n}\n\nexport interface QueryEditorFunctionParameterExpression extends QueryEditorExpression {\n  value: string;\n  fieldType: QueryEditorPropertyType;\n  name: string;\n}\n\nexport interface QueryEditorReduceExpression extends QueryEditorExpression {\n  property: QueryEditorProperty;\n  reduce: QueryEditorProperty;\n  parameters?: QueryEditorFunctionParameterExpression[];\n}\n\nexport interface QueryEditorGroupByExpression extends QueryEditorExpression {\n  property: QueryEditorProperty;\n  interval?: QueryEditorProperty;\n}\nexport interface QueryEditorArrayExpression extends QueryEditorExpression {\n  expressions: QueryEditorExpression[];\n}\n","import _ from 'lodash';\n\nexport interface DataTarget {\n  target: string;\n  datapoints: any[];\n  refId: string;\n  query: any;\n}\n\nexport interface TableResult {\n  columns: TableColumn[];\n  rows: any[];\n  type: string;\n  refId: string;\n  query: string;\n}\n\nexport interface TableColumn {\n  text: string;\n  type: string;\n}\n\nexport interface Variable {\n  text: string;\n  value: string;\n}\n\n// API interfaces\nexport interface KustoDatabaseList {\n  data: {\n    Tables: KustoDatabaseItem[];\n  };\n}\n\nexport interface KustoDatabaseItem {\n  TableName: string;\n  Columns: any[];\n  Rows: any[];\n}\n\nexport interface KustoSchema {\n  Databases: { [key: string]: KustoDatabase };\n  Plugins: any[];\n}\nexport interface KustoDatabase {\n  Name: string;\n  Tables: { [key: string]: KustoTable };\n  Functions: { [key: string]: KustoFunction };\n}\n\nexport interface KustoTable {\n  Name: string;\n  OrderedColumns: KustoColumn[];\n}\n\nexport interface KustoColumn {\n  Name: string;\n  Type: string;\n}\n\nexport interface KustoFunction {\n  Name: string;\n  DocString: string;\n  Body: string;\n  Folder: string;\n  FunctionKind: string;\n  InputParameters: any[];\n  OutputColumns: any[];\n}\n\n// Internal interfaces\nexport interface DatabaseItem {\n  text: string;\n  value: string;\n}\n\nexport class ResponseParser {\n  parseDatabases(results: KustoDatabaseList): DatabaseItem[] {\n    const databases: DatabaseItem[] = [];\n    if (!results || !results.data || !results.data.Tables || results.data.Tables.length === 0) {\n      return databases;\n    }\n\n    for (const table of results.data.Tables) {\n      for (const row of table.Rows) {\n        databases.push({ text: row[5] || row[0], value: row[0] });\n      }\n    }\n\n    return databases;\n  }\n\n  parseSchemaResult(results: any): KustoSchema {\n    const schemaJson = results.Tables[0].Rows[0][0];\n    return JSON.parse(schemaJson);\n  }\n}\n","const packageJson = require('../package.json');\n\nimport { DataQuery, DataSourceJsonData } from '@grafana/data';\nimport {\n  QueryEditorPropertyExpression,\n  QueryEditorArrayExpression,\n  QueryEditorExpressionType,\n  QueryEditorOperatorExpression,\n} from './editor/expressions';\n\nexport interface QueryExpression {\n  from?: QueryEditorPropertyExpression;\n  where: QueryEditorArrayExpression;\n  reduce: QueryEditorArrayExpression;\n  groupBy: QueryEditorArrayExpression;\n  timeshift?: QueryEditorPropertyExpression;\n}\n\ntype QuerySource = 'raw' | 'schema' | 'autocomplete' | 'visual';\nexport interface KustoQuery extends DataQuery {\n  query: string;\n  database: string;\n  alias?: string;\n  resultFormat: string;\n  expression: QueryExpression;\n  rawMode?: boolean;\n  querySource: QuerySource;\n  pluginVersion: string;\n}\n\nexport interface AutoCompleteQuery {\n  database: string;\n  search: QueryEditorOperatorExpression;\n  expression: QueryExpression;\n  index: string;\n}\n\nexport enum EditorMode {\n  Visual = 'visual',\n  Raw = 'raw',\n}\n\nexport const defaultQuery: Pick<KustoQuery, 'query' | 'expression' | 'querySource' | 'pluginVersion'> = {\n  query: '',\n  querySource: EditorMode.Raw,\n  expression: {\n    where: {\n      type: QueryEditorExpressionType.And,\n      expressions: [],\n    },\n    groupBy: {\n      type: QueryEditorExpressionType.And,\n      expressions: [],\n    },\n    reduce: {\n      type: QueryEditorExpressionType.And,\n      expressions: [],\n    },\n  },\n  pluginVersion: packageJson.version,\n};\n\nexport interface SchemaMapping {\n  database: string;\n  type: SchemaMappingType;\n  name: string;\n  displayName: string;\n  value: string;\n}\n\nexport enum SchemaMappingType {\n  function = 'function',\n  table = 'table',\n  materializedView = 'materializedView',\n}\nexport interface AdxDataSourceOptions extends DataSourceJsonData {\n  defaultDatabase: string;\n  minimalCache: number;\n  defaultEditorMode: EditorMode;\n  queryTimeout: string;\n  dataConsistency: string;\n  cacheMaxAge: string;\n  dynamicCaching: boolean;\n  useSchemaMapping: boolean;\n  schemaMappings: SchemaMapping[];\n}\n\nexport interface AdxSchema {\n  Databases: Record<string, AdxDatabaseSchema>;\n}\n\nexport interface AdxDatabaseSchema {\n  Name: string;\n  Tables: Record<string, AdxTableSchema>;\n  ExternalTables: Record<string, AdxTableSchema>;\n  Functions: Record<string, AdxFunctionSchema>;\n  MaterializedViews: Record<string, AdxTableSchema>;\n}\n\nexport interface AdxTableSchema {\n  Name: string;\n  OrderedColumns: AdxColumnSchema[];\n}\n\nexport interface AdxColumnSchema {\n  Name: string;\n  CslType: string;\n}\n\nexport interface AdxFunctionSchema {\n  Body: string;\n  FunctionKind: string;\n  Name: string;\n  InputParameters: AdxFunctionInputParameterSchema[];\n  OutputColumns: AdxColumnSchema[];\n}\n\nexport interface AdxFunctionInputParameterSchema extends AdxColumnSchema {}\n","import { AnnotationEvent, DataFrame, FieldType, Field, KeyValue } from '@grafana/data';\n\ninterface AnnotationEventNames {\n  userId?: string;\n  login?: string;\n  email?: string;\n  avatarUrl?: string;\n  time?: string; // or first time\n  timeEnd?: string;\n  title?: string;\n  text?: string; // or first string\n  tags?: string; // Split on ','\n}\n\nconst defaultAnnotationEventFinder: AnnotationEventNames = {\n  userId: 'userId',\n  login: 'login',\n  email: 'email',\n  avatarUrl: 'avatarUrl',\n  time: 'time',\n  timeEnd: 'timeEnd',\n  title: 'title',\n  text: 'text',\n  tags: 'tags',\n};\n\ninterface AnnotationEventFieldSetter {\n  key: string;\n  field: Field;\n\n  regex?: RegExp; // for text\n  split?: string; // for tags\n}\n\nexport interface AnnotationsFromFrameOptions {\n  field?: AnnotationEventNames;\n  regex?: AnnotationEventNames;\n}\n\nexport function getAnnotationsFromFrame(frame: DataFrame, options?: AnnotationsFromFrameOptions): AnnotationEvent[] {\n  const events: AnnotationEvent[] = [];\n  if (!frame || !frame.length) {\n    return events;\n  }\n\n  let hasTime = false;\n  let hasText = false;\n  const byName: KeyValue<Field> = {};\n  for (const f of frame.fields) {\n    byName[f.name.toLowerCase()] = f;\n  }\n\n  const fields: AnnotationEventFieldSetter[] = [];\n  const finder: AnnotationEventNames = {\n    ...defaultAnnotationEventFinder,\n    ...options?.field,\n  };\n  for (const [key, value] of Object.entries(finder)) {\n    const lower = value ? value.toLowerCase() : '';\n    if (lower && byName[lower]) {\n      const v: AnnotationEventFieldSetter = {\n        key,\n        field: byName[lower],\n      };\n      switch (key) {\n        case 'time':\n          hasTime = true;\n          break;\n        case 'text':\n          hasText = true;\n          break;\n        case 'tags':\n          v.split = ',';\n          break;\n      }\n      if (options?.regex && options.regex[key]) {\n        v.regex = new RegExp(options.regex[key]);\n      }\n      fields.push(v);\n    }\n  }\n  if (!hasTime) {\n    const field = frame.fields.find(f => f.type === FieldType.time);\n    if (!field) {\n      return [];\n    }\n    fields.push({\n      key: 'time',\n      field,\n    });\n  }\n\n  if (!hasText) {\n    const field = frame.fields.find(f => f.type === FieldType.string);\n    if (!field) {\n      return [];\n    }\n    if (options?.regex?.text) {\n      fields.push({\n        key: 'time',\n        field,\n        regex: new RegExp(options.regex.text),\n      });\n    } else {\n      fields.push({\n        key: 'time',\n        field,\n      });\n    }\n  }\n\n  // Add each value to the string\n  for (let i = 0; i < frame.length; i++) {\n    const anno: AnnotationEvent = {};\n    for (const f of fields) {\n      let v = f.field.values.get(i);\n      if (f.regex) {\n        const match = f.regex.exec(v);\n        if (match) {\n          v = match[1] ? match[1] : match[0];\n        }\n      }\n      if (f.split) {\n        v = (v as string).split(',');\n      }\n      anno[f.key] = v;\n    }\n    events.push(anno);\n  }\n\n  return events;\n}\n","import { ScopedVars } from '@grafana/data';\n\nexport default function interpolateKustoQuery(query: string, scopedVars?: ScopedVars): string {\n  if (!query) {\n    return '';\n  }\n  const macroRegexp = /\\$__([_a-zA-Z0-9]+)\\(([^\\)]*)\\)/gi;\n  const intervalRegexp = /\\$(__interval|__interval_ms)/gi;\n\n  query = query.replace(macroRegexp, (match, p1, p2) => {\n    if (p1 === 'contains') {\n      return getMultiContains(p2);\n    }\n    return match;\n  });\n\n  query = query.replace(intervalRegexp, (match, p1) => {\n    if (!scopedVars) {\n      return match;\n    }\n    const values = scopedVars[p1];\n    return values?.value ?? match;\n  });\n\n  return query.replace(/\\$__escapeMulti\\(('[^]*')\\)/gi, (match, p1) => escape(p1));\n}\n\nfunction getMultiContains(inputs: string) {\n  const firstCommaIndex = inputs.indexOf(',');\n  const field = inputs.substring(0, firstCommaIndex);\n  const templateVar = inputs.substring(inputs.indexOf(',') + 1);\n\n  if (templateVar && templateVar.toLowerCase().trim() === 'all') {\n    return '1 == 1';\n  }\n\n  return `${field.trim()} in (${singleQuote(templateVar.trim())})`;\n}\n\nfunction escape(inputs: string) {\n  return inputs\n    .substring(1, inputs.length - 1)\n    .split(`','`)\n    .map(v => `@'${v}'`)\n    .join(', ');\n}\n\nfunction singleQuote(input: string) {\n  if (input.match(/,+/i)) {\n    return input\n      .split(',')\n      .map(singleQuote)\n      .join(',');\n  }\n\n  if (input.match(/^'(.*)'$/i)) {\n    return input;\n  }\n\n  return `'${input}'`;\n}\n","const store: Record<string, any> = {};\n\nexport const cache = async <T>(key: string, resolver: () => Promise<T>, refresh = false): Promise<T> => {\n  if (!store[key] || refresh) {\n    const value = await resolver();\n    store[key] = value;\n  }\n  return store[key];\n};\n\nexport const reset = (keysStartingWith: string): void => {\n  const keys = Object.keys(store);\n\n  for (const key of keys) {\n    if (key.startsWith(keysStartingWith)) {\n      delete store[key];\n    }\n  }\n};\n","export enum QueryEditorPropertyType {\n  Number = 'number',\n  String = 'string',\n  Boolean = 'boolean',\n  DateTime = 'dateTime',\n  TimeSpan = 'timeSpan',\n  Function = 'function',\n  Interval = 'interval',\n}\n\nexport interface QueryEditorProperty {\n  type: QueryEditorPropertyType;\n  name: string;\n}\n\nexport type QueryEditorOperatorType = string | boolean | number;\ntype QueryEditorOperatorValueType = QueryEditorOperatorType | QueryEditorOperatorType[];\n\nexport interface QueryEditorOperator<T = QueryEditorOperatorValueType> {\n  name: string;\n  value: T;\n}\n\nexport interface QueryEditorOperatorDefinition {\n  value: string;\n  supportTypes: QueryEditorPropertyType[];\n  multipleValues: boolean;\n  booleanValues: boolean;\n  label?: string;\n  description?: string;\n}\n\nexport interface QueryEditorPropertyDefinition {\n  value: string;\n  type: QueryEditorPropertyType;\n  label?: string;\n}\n\nexport interface QueryEditorFunctionDefinition extends QueryEditorPropertyDefinition {\n  parameters?: QueryEditorFunctionParameter[];\n  applyOnField: boolean;\n}\n\nexport interface QueryEditorFunctionParameter {\n  name: string;\n  type: QueryEditorPropertyType;\n  description: string;\n  value?: string;\n}\n","import {\n  QueryEditorReduceExpression,\n  QueryEditorPropertyExpression,\n  QueryEditorFunctionParameterExpression,\n  QueryEditorOperatorExpression,\n  QueryEditorGroupByExpression,\n  QueryEditorExpression,\n  QueryEditorExpressionType,\n  QueryEditorArrayExpression,\n} from './expressions';\nimport { QueryEditorPropertyType, QueryEditorOperator } from './types';\n\nexport const isReduceExpression = (expression?: QueryEditorExpression): expression is QueryEditorReduceExpression => {\n  return expression?.type === QueryEditorExpressionType.Reduce;\n};\n\nexport const isFieldExpression = (expression: QueryEditorExpression): expression is QueryEditorPropertyExpression => {\n  return expression?.type === QueryEditorExpressionType.Property;\n};\n\nexport const isFunctionParameterExpression = (\n  expression?: QueryEditorExpression\n): expression is QueryEditorFunctionParameterExpression => {\n  return (expression as QueryEditorFunctionParameterExpression)?.type === QueryEditorExpressionType.FunctionParameter;\n};\n\nexport const isFieldAndOperator = (expression?: QueryEditorExpression): expression is QueryEditorOperatorExpression => {\n  return expression?.type === QueryEditorExpressionType.Operator;\n};\n\nexport const isGroupBy = (expression?: QueryEditorExpression): expression is QueryEditorGroupByExpression => {\n  return expression?.type === QueryEditorExpressionType.GroupBy;\n};\n\nexport const isDateGroupBy = (expression: QueryEditorExpression): boolean => {\n  return (expression as QueryEditorGroupByExpression)?.property?.type === QueryEditorPropertyType.DateTime;\n};\n\nexport const isBoolOperator = (operator: QueryEditorOperator | undefined): operator is QueryEditorOperator<boolean> => {\n  return typeof operator?.value === 'boolean';\n};\n\nexport const isNumberOperator = (\n  operator: QueryEditorOperator | undefined,\n  propertyType: QueryEditorPropertyType | undefined\n): operator is QueryEditorOperator<number> => {\n  return propertyType === QueryEditorPropertyType.Number && typeof operator?.value === 'number';\n};\n\nexport const isDateTimeOperator = (\n  operator: QueryEditorOperator | undefined,\n  propertyType: QueryEditorPropertyType | undefined\n): operator is QueryEditorOperator<string> => {\n  return propertyType === QueryEditorPropertyType.DateTime && typeof operator?.value === 'string';\n};\n\nexport const isMultiOperator = (operator?: QueryEditorOperator): operator is QueryEditorOperator<string[]> => {\n  return Array.isArray(operator?.value);\n};\n\nexport const isSingleOperator = (operator?: QueryEditorOperator): operator is QueryEditorOperator<string> => {\n  return !isMultiOperator(operator);\n};\n\nexport const isAndExpression = (expression?: QueryEditorExpression): expression is QueryEditorArrayExpression => {\n  return expression?.type === QueryEditorExpressionType.And;\n};\n\nexport const isOrExpression = (expression?: QueryEditorExpression): expression is QueryEditorArrayExpression => {\n  return expression?.type === QueryEditorExpressionType.Or;\n};\n\nexport const isArrayExpression = (expression?: QueryEditorExpression): expression is QueryEditorArrayExpression => {\n  return isAndExpression(expression) || isOrExpression(expression);\n};\n","import { QueryExpression, AdxColumnSchema, AutoCompleteQuery } from './types';\nimport { QueryEditorPropertyType } from 'editor/types';\nimport { getTemplateSrv, TemplateSrv } from '@grafana/runtime';\nimport {\n  isReduceExpression,\n  isFieldAndOperator,\n  isGroupBy,\n  isOrExpression,\n  isAndExpression,\n  isArrayExpression,\n} from './editor/guards';\nimport {\n  QueryEditorExpression,\n  QueryEditorOperatorExpression,\n  QueryEditorArrayExpression,\n  QueryEditorPropertyExpression,\n} from './editor/expressions';\nimport { cloneDeep } from 'lodash';\n\ninterface ParseContext {\n  timeColumn?: string;\n  castIfDynamic: (column: string) => string;\n}\nexport class KustoExpressionParser {\n  constructor(private templateSrv: TemplateSrv = getTemplateSrv()) {}\n\n  toAutoCompleteQuery(query?: AutoCompleteQuery, tableSchema?: AdxColumnSchema[]): string {\n    if (!query?.expression || !query.expression.from || !query.search.property) {\n      return '';\n    }\n\n    const context: ParseContext = {\n      timeColumn: defaultTimeColumn(tableSchema, query?.expression),\n      castIfDynamic: (column: string) => castIfDynamic(column, tableSchema),\n    };\n\n    const parts: string[] = [];\n    this.appendProperty(context, query.expression.from, parts);\n    this.appendTimeFilter(context, undefined, parts);\n\n    const where = replaceByIndex(query.index, query.expression.where, query.search);\n    const column = query.search.property.name;\n    this.appendWhere(context, where, parts, 'where');\n\n    parts.push('take 50000');\n    parts.push(`distinct ${context.castIfDynamic(column)}`);\n    parts.push('take 251');\n\n    return parts.join('\\n| ');\n  }\n\n  toQuery(expression?: QueryExpression, tableSchema?: AdxColumnSchema[]): string {\n    if (!expression || !expression.from) {\n      return '';\n    }\n\n    const context: ParseContext = {\n      timeColumn: defaultTimeColumn(tableSchema, expression),\n      castIfDynamic: (column: string) => castIfDynamic(column, tableSchema),\n    };\n\n    const parts: string[] = [];\n    this.appendProperty(context, expression.from, parts);\n    this.appendTimeFilter(context, expression.timeshift, parts);\n    this.appendWhere(context, expression?.where, parts, 'where');\n    this.appendTimeshift(context, expression.timeshift, parts);\n    this.appendSummarize(context, expression.reduce, expression.groupBy, parts);\n    this.appendOrderBy(context, expression.groupBy, expression.reduce, parts);\n\n    if (parts.length === 0) {\n      return '';\n    }\n\n    return parts.join('\\n| ');\n  }\n\n  private appendTimeshift(\n    context: ParseContext,\n    expression: QueryEditorPropertyExpression | undefined,\n    parts: string[]\n  ) {\n    const timeshift = detectTimeshift(context, expression);\n\n    if (!timeshift) {\n      return;\n    }\n    parts.push(`extend ${context.timeColumn} = ${context.timeColumn} + ${timeshift}`);\n  }\n\n  private appendTimeFilter(\n    context: ParseContext,\n    expression: QueryEditorPropertyExpression | undefined,\n    parts: string[]\n  ) {\n    if (!context.timeColumn) {\n      return;\n    }\n\n    const timeshift = detectTimeshift(context, expression);\n\n    if (timeshift) {\n      parts.push(`where ${context.timeColumn} between (($__timeFrom - ${timeshift}) .. ($__timeTo - ${timeshift}))`);\n      return;\n    }\n\n    if (isDynamic(context.timeColumn)) {\n      parts.push(`where ${context.timeColumn} between ($__timeFrom .. $__timeTo)`);\n      return;\n    }\n\n    parts.push(`where $__timeFilter(${context.timeColumn})`);\n  }\n\n  private appendOrderBy(\n    context: ParseContext,\n    groupBy: QueryEditorArrayExpression,\n    reduce: QueryEditorArrayExpression,\n    parts: string[]\n  ) {\n    if (!context.timeColumn) {\n      return;\n    }\n\n    const noGroupBy = Array.isArray(groupBy.expressions) && groupBy.expressions.length === 0;\n    const noReduce = Array.isArray(reduce.expressions) && reduce.expressions.length === 0;\n\n    if (noGroupBy && noReduce) {\n      parts.push(`order by ${context.timeColumn} asc`);\n      return;\n    }\n\n    const hasInterval = groupBy.expressions.find(exp => {\n      if (!isGroupBy(exp) || !exp.interval) {\n        return false;\n      }\n      return true;\n    });\n\n    if (hasInterval) {\n      parts.push(`order by ${context.timeColumn} asc`);\n      return;\n    }\n  }\n\n  private appendWhere(\n    context: ParseContext,\n    expression: QueryEditorExpression | undefined,\n    parts: string[],\n    prefix?: string\n  ) {\n    if (!expression) {\n      return;\n    }\n\n    if (isAndExpression(expression)) {\n      return expression.expressions.forEach(exp => this.appendWhere(context, exp, parts, prefix));\n    }\n\n    if (isOrExpression(expression)) {\n      const orParts: string[] = [];\n      expression.expressions.map(exp => this.appendWhere(context, exp, orParts));\n      if (orParts.length === 0) {\n        return;\n      }\n      return parts.push(`where ${orParts.join(' or ')}`);\n    }\n\n    if (isFieldAndOperator(expression)) {\n      return this.appendOperator(context, expression, parts, prefix);\n    }\n  }\n\n  private appendSummarize(\n    context: ParseContext,\n    reduce: QueryEditorArrayExpression | undefined,\n    groupBy: QueryEditorArrayExpression | undefined,\n    parts: string[]\n  ) {\n    let countAddedInReduce = false;\n    const reduceParts: string[] = [];\n    const groupByParts: string[] = [];\n    const columns: string[] = [];\n\n    for (const expression of reduce?.expressions ?? []) {\n      if (!isReduceExpression(expression)) {\n        continue;\n      }\n\n      const func = expression.reduce.name;\n      const parameters = expression.parameters;\n      const column = context.castIfDynamic(expression.property.name);\n      columns.push(column);\n\n      if (Array.isArray(parameters)) {\n        const funcParams = parameters.map(p => this.formatValue(p.value, p.fieldType)).join(', ');\n        reduceParts.push(`${func}(${column}, ${funcParams})`);\n        continue;\n      }\n\n      if (func === 'count') {\n        if (!countAddedInReduce) {\n          countAddedInReduce = true;\n          reduceParts.push('count()');\n        }\n        continue;\n      }\n\n      if (func !== 'none') {\n        reduceParts.push(`${func}(${column})`);\n        continue;\n      }\n    }\n\n    for (const expression of groupBy?.expressions ?? []) {\n      if (!isGroupBy(expression)) {\n        continue;\n      }\n\n      const column = context.castIfDynamic(expression.property.name);\n\n      if (expression.interval) {\n        const interval = expression.interval.name;\n        groupByParts.unshift(`bin(${column}, ${interval})`);\n        continue;\n      }\n\n      groupByParts.push(column);\n    }\n\n    if (reduceParts.length > 0) {\n      if (groupByParts.length > 0) {\n        parts.push(`summarize ${reduceParts.join(', ')} by ${groupByParts.join(', ')}`);\n        return;\n      }\n      parts.push(`summarize ${reduceParts.join(', ')}`);\n      return;\n    }\n\n    if (groupByParts.length > 0) {\n      parts.push(`summarize by ${groupByParts.join(', ')}`);\n      return;\n    }\n\n    if (columns.length > 0) {\n      parts.push(`project ${columns.join(', ')}`);\n      return;\n    }\n  }\n\n  private appendOperator(\n    context: ParseContext,\n    expression: QueryEditorOperatorExpression,\n    parts: string[],\n    prefix?: string\n  ) {\n    const { property, operator } = expression;\n\n    if (!property.name || !operator.name) {\n      return;\n    }\n\n    switch (operator.name) {\n      case 'isnotempty':\n        parts.push(withPrefix(`${operator.name}(${property.name})`, prefix));\n        break;\n\n      default:\n        const value = this.formatValue(operator.value, property.type);\n        parts.push(withPrefix(`${property.name} ${operator.name} ${value}`, prefix));\n        break;\n    }\n  }\n\n  private formatValue(value: any, type: QueryEditorPropertyType): string {\n    if (Array.isArray(value)) {\n      return `(${value.map(v => this.formatValue(v, type)).join(', ')})`;\n    }\n\n    if (this.isTemplateVariable(value)) {\n      return value;\n    }\n\n    switch (type) {\n      case QueryEditorPropertyType.Number:\n      case QueryEditorPropertyType.Boolean:\n        return value;\n      default:\n        return `'${value}'`;\n    }\n  }\n\n  private appendProperty(context: ParseContext, expression: QueryEditorPropertyExpression, parts: string[]) {\n    parts.push(expression.property.name);\n  }\n\n  private isTemplateVariable(value: string): boolean {\n    if (!Array.isArray(this.templateSrv.getVariables())) {\n      return false;\n    }\n\n    return !!this.templateSrv.getVariables().find((variable: any) => {\n      return `$${variable?.id}` === value;\n    });\n  }\n}\n\nconst withPrefix = (value: string, prefix?: string): string => {\n  if (prefix) {\n    return `${prefix} ${value}`;\n  }\n  return value;\n};\n\nconst defaultTimeColumn = (columns?: AdxColumnSchema[], expression?: QueryExpression): string | undefined => {\n  if (Array.isArray(expression?.groupBy.expressions)) {\n    const groupByTimeColumn = expression?.groupBy.expressions.find(exp => {\n      if (!isGroupBy(exp)) {\n        return false;\n      }\n      return exp.property.type === QueryEditorPropertyType.DateTime && exp.interval;\n    });\n\n    if (isGroupBy(groupByTimeColumn)) {\n      return castIfDynamic(groupByTimeColumn.property.name, columns);\n    }\n  }\n\n  if (!Array.isArray(columns)) {\n    return;\n  }\n\n  const firstLevelColumn = columns?.find(col => {\n    return col.CslType === 'datetime' && col.Name.indexOf('.') === -1;\n  });\n\n  if (firstLevelColumn) {\n    return firstLevelColumn?.Name;\n  }\n\n  const column = columns?.find(col => col.CslType === 'datetime');\n\n  if (!column) {\n    return column;\n  }\n\n  return toDynamic(column);\n};\n\nconst isDynamic = (column: string): boolean => {\n  return !!(column && column.indexOf('.') > -1) || !!(column && column.indexOf('todynamic') > -1);\n};\n\nconst castIfDynamic = (column: string, tableSchema?: AdxColumnSchema[]): string => {\n  if (!isDynamic(column) || !Array.isArray(tableSchema)) {\n    return column;\n  }\n\n  const columnSchema = tableSchema.find(c => c.Name === column);\n\n  if (!columnSchema) {\n    return column;\n  }\n\n  return toDynamic(columnSchema);\n};\n\nconst toDynamic = (column: AdxColumnSchema): string => {\n  const parts = column.Name.split('.');\n\n  return parts.reduce((result: string, part, index) => {\n    if (!result) {\n      return `todynamic(${part})`;\n    }\n\n    if (index + 1 === parts.length) {\n      return `to${column.CslType}(${result}.${part})`;\n    }\n\n    return `todynamic(${result}.${part})`;\n  }, '');\n};\n\nconst replaceByIndex = (\n  index: string,\n  expression: QueryEditorArrayExpression,\n  operator: QueryEditorOperatorExpression\n): QueryEditorArrayExpression => {\n  const keys = index.split('-').map(n => parseInt(n, 10));\n\n  let where = cloneDeep(expression);\n  let current = where.expressions;\n\n  for (let index = 0; index < keys.length; index++) {\n    const key = keys[index];\n\n    if (index === keys.length - 1) {\n      current[key] = operator;\n      break;\n    }\n\n    if (Array.isArray(current)) {\n      const exp = current[key];\n\n      if (isArrayExpression(exp)) {\n        current = exp.expressions;\n        continue;\n      }\n    }\n  }\n\n  return where;\n};\n\nconst isValidTimeSpan = (value: string) => {\n  return /^(\\d{1,15}(?:d|h|ms|s|m){0,1})$/gm.test(value);\n};\n\nconst detectTimeshift = (\n  context: ParseContext,\n  timeshift: QueryEditorPropertyExpression | undefined\n): string | null => {\n  if (!timeshift || !context.timeColumn || !timeshift.property) {\n    return null;\n  }\n\n  const timeshiftWith = timeshift.property.name;\n\n  if (!isValidTimeSpan(timeshiftWith)) {\n    return null;\n  }\n  return timeshiftWith;\n};\n","import { AdxTableSchema, AdxColumnSchema, AdxDatabaseSchema } from '../types';\nimport { QueryEditorPropertyDefinition, QueryEditorPropertyType } from '../editor/types';\nimport { SelectableValue } from '@grafana/data';\n\nexport const tableToDefinition = (table: AdxTableSchema): QueryEditorPropertyDefinition => {\n  return {\n    label: table.Name,\n    value: table.Name,\n    type: QueryEditorPropertyType.String,\n  };\n};\n\nexport const tableToSelectable = (table: AdxTableSchema): SelectableValue<string> => {\n  return {\n    label: table.Name,\n    value: table.Name,\n  };\n};\n\nexport const databaseToDefinition = (database: AdxDatabaseSchema): QueryEditorPropertyDefinition => {\n  return {\n    value: database.Name,\n    label: database.Name,\n    type: QueryEditorPropertyType.String,\n  };\n};\n\nexport const databasesToDefinition = (databases: AdxDatabaseSchema[]): QueryEditorPropertyDefinition[] => {\n  if (!Array.isArray(databases)) {\n    return [];\n  }\n  return databases.map(databaseToDefinition);\n};\n\nexport const tablesToDefinition = (tables: AdxTableSchema[]): QueryEditorPropertyDefinition[] => {\n  if (!Array.isArray(tables)) {\n    return [];\n  }\n\n  return tables.map(table => ({\n    value: table.Name,\n    label: table.Name,\n    type: QueryEditorPropertyType.String,\n  }));\n};\n\nexport const columnsToDefinition = (columns: AdxColumnSchema[]): QueryEditorPropertyDefinition[] => {\n  if (!Array.isArray(columns)) {\n    return [];\n  }\n\n  return columns.map(column => ({\n    value: column.Name,\n    label: column.Name,\n    type: toPropertyType(column.CslType),\n  }));\n};\n\nconst toPropertyType = (kustoType: string): QueryEditorPropertyType => {\n  switch (kustoType) {\n    case 'real':\n    case 'int':\n    case 'long':\n      return QueryEditorPropertyType.Number;\n    case 'datetime':\n      return QueryEditorPropertyType.DateTime;\n    case 'bool':\n      return QueryEditorPropertyType.Boolean;\n    default:\n      return QueryEditorPropertyType.String;\n  }\n};\n","import { QueryEditorPropertyDefinition, QueryEditorPropertyType } from '../editor/types';\nimport { AdxDatabaseSchema, AdxSchema, SchemaMapping, SchemaMappingType } from '../types';\nimport { tableToDefinition } from './mapper';\n\nexport class AdxSchemaMapper {\n  private mappingsByDatabase: Record<string, SchemaMapping[]> = {};\n  private displayNameToMapping: Record<string, SchemaMapping> = {};\n  private nameToMapping: Record<string, SchemaMapping> = {};\n  private valueToMapping: Record<string, SchemaMapping> = {};\n\n  constructor(private enabled = false, mappings: SchemaMapping[] = []) {\n    for (const mapping of mappings) {\n      if (!Array.isArray(this.mappingsByDatabase[mapping.database])) {\n        this.mappingsByDatabase[mapping.database] = [];\n      }\n      this.mappingsByDatabase[mapping.database].push(mapping);\n      this.displayNameToMapping[mapping.displayName] = mapping;\n      this.nameToMapping[mapping.name] = mapping;\n      this.valueToMapping[mapping.value] = mapping;\n    }\n  }\n\n  getMappingByValue(value?: string): SchemaMapping | undefined {\n    if (!this.enabled || !value) {\n      return;\n    }\n    return this.valueToMapping[value];\n  }\n\n  getTableOptions(schema: AdxSchema, databaseName: string): QueryEditorPropertyDefinition[] {\n    const database = schema.Databases[databaseName];\n\n    if (!database || !database.Tables) {\n      return [];\n    }\n\n    if (!this.enabled) {\n      return Object.keys(database.Tables).map(key => {\n        const table = database.Tables[key];\n        return tableToDefinition(table);\n      });\n    }\n\n    const mappings = this.mappingsByDatabase[databaseName];\n    return filterAndMapToDefinition(database, mappings);\n  }\n}\n\nconst filterAndMapToDefinition = (\n  database: AdxDatabaseSchema,\n  mappings: SchemaMapping[] = []\n): QueryEditorPropertyDefinition[] => {\n  return mappings.reduce((all: QueryEditorPropertyDefinition[], mapping) => {\n    if (mapping.type === SchemaMappingType.table) {\n      if (database.Tables[mapping.name]) {\n        all.push(mappingToDefinition(mapping));\n        return all;\n      }\n    }\n\n    if (mapping.type === SchemaMappingType.materializedView) {\n      if (database.MaterializedViews[mapping.name]) {\n        all.push(mappingToDefinition(mapping));\n        return all;\n      }\n    }\n\n    if (mapping.type === SchemaMappingType.function) {\n      if (database.Functions[mapping.name]) {\n        all.push(mappingToDefinition(mapping));\n        return all;\n      }\n    }\n\n    return all;\n  }, []);\n};\n\nconst mappingToDefinition = (mapping: SchemaMapping): QueryEditorPropertyDefinition => {\n  return {\n    type: QueryEditorPropertyType.String,\n    label: mapping.displayName,\n    value: mapping.value,\n  };\n};\n","import {\n  MetricFindValue,\n  DataSourceInstanceSettings,\n  DataQueryRequest,\n  ScopedVar,\n  TimeRange,\n  DataFrame,\n  AnnotationQueryRequest,\n  AnnotationEvent,\n  LoadingState,\n  ScopedVars,\n} from '@grafana/data';\nimport { map } from 'lodash';\nimport { getBackendSrv, BackendSrv, getTemplateSrv, TemplateSrv, DataSourceWithBackend } from '@grafana/runtime';\nimport { ResponseParser, DatabaseItem } from './response_parser';\nimport {\n  AdxDataSourceOptions,\n  KustoQuery,\n  AdxSchema,\n  AdxColumnSchema,\n  defaultQuery,\n  QueryExpression,\n  EditorMode,\n  AutoCompleteQuery,\n} from './types';\nimport { getAnnotationsFromFrame } from './common/annotationsFromFrame';\nimport interpolateKustoQuery from './query_builder';\nimport { firstStringFieldToMetricFindValue } from 'common/responseHelpers';\nimport { QueryEditorPropertyExpression } from 'editor/expressions';\nimport { QueryEditorOperator } from 'editor/types';\nimport { cache } from 'schema/cache';\nimport { KustoExpressionParser } from 'KustoExpressionParser';\nimport { AdxSchemaMapper } from 'schema/AdxSchemaMapper';\n\nexport class AdxDataSource extends DataSourceWithBackend<KustoQuery, AdxDataSourceOptions> {\n  private backendSrv: BackendSrv;\n  private templateSrv: TemplateSrv;\n  private baseUrl: string;\n  private defaultOrFirstDatabase: string;\n  private url?: string;\n  private expressionParser: KustoExpressionParser;\n  private defaultEditorMode: EditorMode;\n  private schemaMapper: AdxSchemaMapper;\n\n  constructor(instanceSettings: DataSourceInstanceSettings<AdxDataSourceOptions>) {\n    super(instanceSettings);\n\n    const useSchemaMapping = instanceSettings.jsonData.useSchemaMapping ?? false;\n    const schemaMapping = instanceSettings.jsonData.schemaMappings ?? [];\n\n    this.backendSrv = getBackendSrv();\n    this.templateSrv = getTemplateSrv();\n    this.baseUrl = '/azuredataexplorer';\n    this.defaultOrFirstDatabase = instanceSettings.jsonData.defaultDatabase;\n    this.url = instanceSettings.url;\n    this.defaultEditorMode = instanceSettings.jsonData.defaultEditorMode ?? EditorMode.Visual;\n    this.schemaMapper = new AdxSchemaMapper(useSchemaMapping, schemaMapping);\n    this.expressionParser = new KustoExpressionParser(this.templateSrv);\n    this.parseExpression = this.parseExpression.bind(this);\n    this.autoCompleteQuery = this.autoCompleteQuery.bind(this);\n    this.getSchemaMapper = this.getSchemaMapper.bind(this);\n  }\n\n  /**\n   * Return true if it should execute\n   */\n  filterQuery(target: KustoQuery): boolean {\n    if (target.hide || !target.query) {\n      return false;\n    }\n    if (typeof target.rawMode === 'undefined' && target.query) {\n      return true;\n    }\n    if (target.rawMode) {\n      return true; // anything else we can check\n    }\n\n    const tableExpr = target.expression?.from as QueryEditorPropertyExpression;\n    if (!tableExpr) {\n      return false;\n    }\n\n    const table = tableExpr.property?.name;\n    if (!table) {\n      return false; // Don't execute things without a table selected\n    }\n    return true;\n  }\n\n  applyTemplateVariables(target: KustoQuery, scopedVars: ScopedVar): Record<string, any> {\n    let q = interpolateKustoQuery(target.query, scopedVars as ScopedVars);\n\n    return {\n      ...target,\n      query: this.templateSrv.replace(q, scopedVars, this.interpolateVariable),\n      database: this.templateSrv.replace(target.database, scopedVars),\n    };\n  }\n\n  async annotationQuery(options: AnnotationQueryRequest<KustoQuery>): Promise<AnnotationEvent[]> {\n    const query = options.annotation as KustoQuery;\n    if (!query) {\n      return Promise.reject({\n        message: 'Query missing in annotation definition',\n      });\n    }\n\n    query.resultFormat = 'table';\n\n    return super\n      .query({\n        targets: [query],\n        range: options.range as TimeRange,\n        maxDataPoints: 200, // ???\n        interval: '10ms',\n        intervalMs: 10 * 1000,\n      } as DataQueryRequest<KustoQuery>)\n      .toPromise()\n      .then(res => {\n        if (res.state === LoadingState.Done) {\n          if (res.data?.length) {\n            return getAnnotationsFromFrame(res.data[0] as DataFrame, {\n              field: {\n                time: 'StartTime',\n              },\n            });\n          }\n        }\n        if (res.state === LoadingState.Error) {\n          console.log('ADX Annotation ERROR???', options, res);\n          return Promise.reject({\n            message: options.annotation.name,\n          });\n        }\n        return [];\n      });\n  }\n\n  async metricFindQuery(query: string, optionalOptions: any): Promise<MetricFindValue[]> {\n    const databasesQuery = query.match(/^databases\\(\\)/i);\n    if (databasesQuery) {\n      return this.getDatabases();\n    }\n\n    return this.getDefaultOrFirstDatabase()\n      .then(database => this.buildQuery(query, optionalOptions, database))\n      .then(query =>\n        this.query({\n          targets: [query],\n        } as DataQueryRequest<KustoQuery>).toPromise()\n      )\n      .then(response => {\n        if (response.data && response.data.length) {\n          return firstStringFieldToMetricFindValue(response.data[0]);\n        }\n        return [];\n      })\n      .catch(err => {\n        console.log('There was an error', err);\n        throw err;\n      });\n  }\n\n  async getDatabases(): Promise<DatabaseItem[]> {\n    const url = `${this.baseUrl}/v1/rest/mgmt`;\n    const req = {\n      csl: '.show databases',\n    };\n\n    return this.doRequest(url, req).then((response: any) => {\n      return new ResponseParser().parseDatabases(response);\n    });\n  }\n\n  async getDefaultOrFirstDatabase(): Promise<string> {\n    if (this.defaultOrFirstDatabase) {\n      return Promise.resolve(this.defaultOrFirstDatabase);\n    }\n\n    return this.getDatabases().then(databases => {\n      this.defaultOrFirstDatabase = databases[0].value;\n      return this.defaultOrFirstDatabase;\n    });\n  }\n\n  async getSchema(refreshCache = false): Promise<AdxSchema> {\n    return cache<AdxSchema>(\n      `${this.id}.schema.overview`,\n      () => {\n        const url = `${this.baseUrl}/v1/rest/mgmt`;\n        const req = {\n          querySource: 'schema',\n          csl: `.show databases schema as json`,\n        };\n\n        return this.doRequest(url, req).then(response => {\n          return new ResponseParser().parseSchemaResult(response.data);\n        });\n      },\n      refreshCache\n    );\n  }\n\n  async getFunctionSchema(database: string, targetFunction: string): Promise<AdxColumnSchema[]> {\n    const queryParts: string[] = [];\n    const take = 'take 50000';\n\n    queryParts.push(targetFunction);\n    queryParts.push(take);\n    queryParts.push('getschema');\n\n    const query = this.buildQuery(queryParts.join('\\n | '), {}, database);\n    const response = await this.query({\n      targets: [\n        {\n          ...query,\n          querySource: 'schema',\n        },\n      ],\n    } as DataQueryRequest<KustoQuery>).toPromise();\n\n    return functionSchemaParser(response.data as DataFrame[]);\n  }\n\n  async getDynamicSchema(\n    database: string,\n    source: string,\n    columns: string[]\n  ): Promise<Record<string, AdxColumnSchema[]>> {\n    if (!database || !source || !Array.isArray(columns) || columns.length === 0) {\n      return {};\n    }\n    const queryParts: string[] = [];\n\n    const take = 'take 50000';\n    const where = `where ${columns.map(column => `isnotnull(${column})`).join(' and ')}`;\n    const project = `project ${columns.map(column => column).join(', ')}`;\n    const summarize = `summarize ${columns.map(column => `buildschema(${column})`).join(', ')}`;\n\n    queryParts.push(source);\n    queryParts.push(take);\n    queryParts.push(where);\n    queryParts.push(project);\n    queryParts.push(summarize);\n\n    const query = this.buildQuery(queryParts.join('\\n | '), {}, database);\n    const response = await this.query({\n      targets: [\n        {\n          ...query,\n          querySource: 'schema',\n        },\n      ],\n    } as DataQueryRequest<KustoQuery>).toPromise();\n\n    return dynamicSchemaParser(response.data as DataFrame[]);\n  }\n\n  get variables() {\n    return this.templateSrv.getVariables().map(v => `$${v.name}`);\n  }\n\n  // Used for annotations and templage variables\n  private buildQuery(query: string, options: any, database: string): KustoQuery {\n    if (!options) {\n      options = {};\n    }\n    if (!options.hasOwnProperty('scopedVars')) {\n      options['scopedVars'] = {};\n    }\n\n    const interpolatedQuery = interpolateKustoQuery(query, options['scopedVars']);\n\n    return {\n      ...defaultQuery,\n      refId: `adx-${interpolatedQuery}`,\n      resultFormat: 'table',\n      rawMode: true,\n      query: interpolatedQuery,\n      database,\n    };\n  }\n\n  // Used to get the schema directly\n  doRequest(url: string, data: any, maxRetries = 1) {\n    return this.backendSrv\n      .datasourceRequest({\n        url: this.url + url,\n        method: 'POST',\n        data: data,\n      })\n      .catch(error => {\n        if (maxRetries > 0) {\n          return this.doRequest(url, data, maxRetries - 1);\n        }\n\n        throw error;\n      });\n  }\n\n  interpolateVariable(value: any, variable) {\n    if (typeof value === 'string') {\n      if (variable.multi || variable.includeAll) {\n        return \"'\" + value + \"'\";\n      } else {\n        return value;\n      }\n    }\n\n    if (typeof value === 'number') {\n      return value;\n    }\n\n    const quotedValues = map(value, val => {\n      if (typeof value === 'number') {\n        return value;\n      }\n\n      return \"'\" + escapeSpecial(val) + \"'\";\n    });\n    return quotedValues.filter(v => v !== \"''\").join(',');\n  }\n\n  getSchemaMapper(): AdxSchemaMapper {\n    return this.schemaMapper;\n  }\n\n  parseExpression(sections: QueryExpression | undefined, columns: AdxColumnSchema[] | undefined): string {\n    return this.expressionParser.toQuery(sections, columns);\n  }\n\n  getDefaultEditorMode(): EditorMode {\n    return this.defaultEditorMode;\n  }\n\n  async autoCompleteQuery(query: AutoCompleteQuery, columns: AdxColumnSchema[] | undefined): Promise<string[]> {\n    const autoQuery = this.expressionParser.toAutoCompleteQuery(query, columns);\n\n    if (!autoQuery) {\n      return [];\n    }\n\n    const kustQuery: KustoQuery = {\n      ...defaultQuery,\n      refId: `adx-${autoQuery}`,\n      database: query.database,\n      rawMode: true,\n      query: autoQuery,\n      resultFormat: 'table',\n      querySource: 'autocomplete',\n    };\n\n    const response = await this.query(\n      includeTimeRange({\n        targets: [kustQuery],\n      }) as DataQueryRequest<KustoQuery>\n    ).toPromise();\n\n    if (!Array.isArray(response?.data) || response.data.length === 0) {\n      return [];\n    }\n\n    if (!Array.isArray(response.data[0].fields) || response.data[0].fields.length === 0) {\n      return [];\n    }\n\n    const results = response.data[0].fields[0].values.toArray();\n    const operator: QueryEditorOperator<string> = query.search.operator as QueryEditorOperator<string>; // why is this always T = QueryEditorOperatorValueType\n\n    return operator.name === 'contains' ? sortStartsWithValuesFirst(results, operator.value) : results;\n  }\n}\n\nconst functionSchemaParser = (frames: DataFrame[]): AdxColumnSchema[] => {\n  const result: AdxColumnSchema[] = [];\n  const fields = frames[0].fields;\n\n  if (!fields) {\n    return result;\n  }\n\n  const nameIndex = fields.findIndex(f => f.name === 'ColumnName');\n  const typeIndex = fields.findIndex(f => f.name === 'ColumnType');\n\n  if (nameIndex < 0 || typeIndex < 0) {\n    return result;\n  }\n\n  for (const frame of frames) {\n    for (let index = 0; index < frame.length; index++) {\n      result.push({\n        Name: frame.fields[nameIndex].values.get(index),\n        CslType: frame.fields[typeIndex].values.get(index),\n      });\n    }\n  }\n\n  return result;\n};\n\nconst dynamicSchemaParser = (frames: DataFrame[]): Record<string, AdxColumnSchema[]> => {\n  const result: Record<string, AdxColumnSchema[]> = {};\n\n  for (const frame of frames) {\n    for (const field of frame.fields) {\n      const json = JSON.parse(field.values.get(0));\n\n      if (json === null) {\n        console.log('error with field', field);\n        continue;\n      }\n\n      const columnSchemas: AdxColumnSchema[] = [];\n      const columnName = field.name.replace('schema_', '');\n      recordSchema(columnName, json, columnSchemas);\n      result[columnName] = columnSchemas;\n    }\n  }\n\n  return result;\n};\n\nconst recordSchema = (columnName: string, schema: any, result: AdxColumnSchema[]) => {\n  if (!schema) {\n    console.log('error with column', columnName);\n    return;\n  }\n\n  for (const name of Object.keys(schema)) {\n    const key = `${columnName}.${name}`;\n\n    if (typeof schema[name] === 'string') {\n      result.push({\n        Name: key,\n        CslType: schema[name],\n      });\n      continue;\n    }\n\n    if (typeof schema[name] === 'object') {\n      recordSchema(key, schema[name], result);\n    }\n  }\n};\n\n/**\n * this is a suuuper ugly way of doing this.\n */\nconst includeTimeRange = (option: any): any => {\n  const range = (getTemplateSrv() as any)?.timeRange as TimeRange;\n\n  if (!range) {\n    return option;\n  }\n\n  return {\n    ...option,\n    range,\n  };\n};\n\nconst escapeSpecial = (value: string): string => {\n  return value.replace(/\\'/gim, \"\\\\'\");\n};\n\nexport const sortStartsWithValuesFirst = (arr: string[], searchText: string) => {\n  const text = searchText.toLowerCase();\n\n  arr.sort((a, b) => {\n    if (!a && !b) {\n      return 0;\n    }\n\n    if (!a && b) {\n      return -1;\n    }\n\n    if (a && !b) {\n      return 1;\n    }\n\n    const aLower = a.toLowerCase();\n    const bLower = b.toLowerCase();\n\n    if (aLower.startsWith(text) && bLower.startsWith(text)) {\n      return 0;\n    }\n\n    if (aLower.startsWith(text) && !bLower.startsWith(text) && bLower.includes(text, 1)) {\n      return -1;\n    }\n\n    if (aLower.startsWith(text) && !bLower.includes(text, 1)) {\n      return -1;\n    }\n\n    if (!aLower.startsWith(text) && aLower.includes(text, 1) && bLower.startsWith(text)) {\n      return 1;\n    }\n\n    if (!aLower.includes(text, 1) && bLower.startsWith(text)) {\n      return 1;\n    }\n\n    if (aLower.includes(text, 1) && !bLower.includes(text, 1)) {\n      return -1;\n    }\n\n    if (!aLower.includes(text, 1) && bLower.includes(text, 1)) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  return arr;\n};\n","import { DataFrame, MetricFindValue, FieldType } from '@grafana/data';\n\nexport function firstStringFieldToMetricFindValue(frame: DataFrame): MetricFindValue[] {\n  const values: MetricFindValue[] = [];\n  const field = frame.fields.find(f => f.type === FieldType.string);\n  if (field) {\n    for (let i = 0; i < field.values.length; i++) {\n      values.push({ text: field.values.get(i) });\n    }\n  }\n  return values;\n}\n","import { __assign } from \"tslib\";\n/* eslint-disable */\nimport { useCallback, useState, useRef } from 'react';\nimport useMountedState from './useMountedState';\nexport default function useAsyncFn(fn, deps, initialState) {\n    if (deps === void 0) { deps = []; }\n    if (initialState === void 0) { initialState = { loading: false }; }\n    var lastCallId = useRef(0);\n    var isMounted = useMountedState();\n    var _a = useState(initialState), state = _a[0], set = _a[1];\n    var callback = useCallback(function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var callId = ++lastCallId.current;\n        set(function (prevState) { return (__assign(__assign({}, prevState), { loading: true })); });\n        return fn.apply(void 0, args).then(function (value) {\n            isMounted() && callId === lastCallId.current && set({ value: value, loading: false });\n            return value;\n        }, function (error) {\n            isMounted() && callId === lastCallId.current && set({ error: error, loading: false });\n            return error;\n        });\n    }, deps);\n    return [state, callback];\n}\n","import { useCallback, useEffect, useRef } from 'react';\nexport default function useMountedState() {\n    var mountedRef = useRef(false);\n    var get = useCallback(function () { return mountedRef.current; }, []);\n    useEffect(function () {\n        mountedRef.current = true;\n        return function () {\n            mountedRef.current = false;\n        };\n    });\n    return get;\n}\n","import { useEffect } from 'react';\nimport useAsyncFn from './useAsyncFn';\nexport default function useAsync(fn, deps) {\n    if (deps === void 0) { deps = []; }\n    var _a = useAsyncFn(fn, deps, {\n        loading: true,\n    }), state = _a[0], callback = _a[1];\n    useEffect(function () {\n        callback();\n    }, [callback]);\n    return state;\n}\n","import _ from 'lodash';\n\nexport interface SuggestionController {\n  _model: any;\n}\n\nexport default class KustoCodeEditor {\n  codeEditor?: monaco.editor.IStandaloneCodeEditor;\n  completionItemProvider?: monaco.IDisposable;\n  signatureHelpProvider?: monaco.IDisposable;\n\n  splitWithNewLineRegex = /[^\\n]+\\n?|\\n/g;\n  newLineRegex = /\\r?\\n/;\n  startsWithKustoPipeRegex = /^\\|\\s*/g;\n  kustoPipeRegexStrict = /^\\|\\s*$/g;\n\n  constructor(\n    private containerDiv: any,\n    private defaultTimeField: string,\n    private getSchema: () => any,\n    private config: any\n  ) {}\n\n  initMonaco(content: string) {\n    const themeName = this.config.bootData.user.lightTheme ? 'grafana-light' : 'vs-dark';\n\n    monaco.editor.defineTheme('grafana-light', {\n      base: 'vs',\n      inherit: true,\n      rules: [\n        { token: 'comment', foreground: '008000' },\n        { token: 'variable.predefined', foreground: '800080' },\n        { token: 'function', foreground: '0000FF' },\n        { token: 'operator.sql', foreground: 'FF4500' },\n        { token: 'string', foreground: 'B22222' },\n        { token: 'operator.scss', foreground: '0000FF' },\n        { token: 'variable', foreground: 'C71585' },\n        { token: 'variable.parameter', foreground: '9932CC' },\n        { token: '', foreground: '000000' },\n        { token: 'type', foreground: '0000FF' },\n        { token: 'tag', foreground: '0000FF' },\n        { token: 'annotation', foreground: '2B91AF' },\n        { token: 'keyword', foreground: '0000FF' },\n        { token: 'number', foreground: '191970' },\n        { token: 'annotation', foreground: '9400D3' },\n        { token: 'invalid', background: 'cd3131' },\n      ],\n      colors: {\n        'textCodeBlock.background': '#FFFFFF',\n      },\n    });\n\n    monaco.languages['kusto'].kustoDefaults.setLanguageSettings({\n      includeControlCommands: true,\n      newlineAfterPipe: true,\n      useIntellisenseV2: false,\n    });\n\n    this.codeEditor = monaco.editor.create(this.containerDiv, {\n      value: content || 'Write your query here',\n      // Disabling the automatic resizing until we upgrade Monaco due to perf concerns: https://github.com/microsoft/monaco-editor/issues/28\n      // automaticLayout: true,\n      language: 'kusto',\n      selectionHighlight: false,\n      theme: themeName,\n      folding: true,\n      lineNumbers: 'off',\n      lineHeight: 16,\n      suggestFontSize: 13,\n      dragAndDrop: false,\n      occurrencesHighlight: false,\n      minimap: {\n        enabled: false,\n      },\n      renderIndentGuides: false,\n      wordWrap: 'on',\n    });\n    this.codeEditor.layout();\n\n    // TODO: fix ts-ignore\n    if (monaco.editor.getModels().length === 1) {\n      this.completionItemProvider = monaco.languages.registerCompletionItemProvider('kusto', {\n        triggerCharacters: ['.', ' '],\n        // @ts-ignore\n        provideCompletionItems: this.getCompletionItems.bind(this),\n      });\n\n      this.signatureHelpProvider = monaco.languages.registerSignatureHelpProvider('kusto', {\n        signatureHelpTriggerCharacters: ['(', ')'],\n        provideSignatureHelp: this.getSignatureHelp.bind(this) as any,\n      });\n    }\n\n    this.codeEditor.createContextKey('readyToExecute', true);\n\n    this.codeEditor.onDidChangeCursorSelection(event => {\n      this.onDidChangeCursorSelection(event);\n    });\n\n    this.getSchema().then(schema => {\n      if (!schema) {\n        return;\n      }\n\n      monaco.languages['kusto'].getKustoWorker().then(workerAccessor => {\n        const model = this.codeEditor?.getModel();\n        if (!model) {\n          return;\n        }\n        workerAccessor(model.uri).then(worker => {\n          const dbName = Object.keys(schema.Databases).length > 0 ? Object.keys(schema.Databases)[0] : '';\n          worker.setSchemaFromShowSchema(schema, 'https://help.kusto.windows.net', dbName);\n          this.codeEditor?.layout();\n        });\n      });\n    });\n  }\n\n  resize() {\n    this.codeEditor?.layout();\n  }\n\n  setOnDidChangeModelContent(listener) {\n    this.codeEditor?.onDidChangeModelContent(listener);\n  }\n\n  disposeMonaco() {\n    if (this.completionItemProvider) {\n      try {\n        this.completionItemProvider.dispose();\n      } catch (e) {\n        console.error('Failed to dispose the completion item provider.', e);\n      }\n    }\n    if (this.signatureHelpProvider) {\n      try {\n        this.signatureHelpProvider.dispose();\n      } catch (e) {\n        console.error('Failed to dispose the signature help provider.', e);\n      }\n    }\n    if (this.codeEditor) {\n      try {\n        this.codeEditor.dispose();\n      } catch (e) {\n        console.error('Failed to dispose the editor component.', e);\n      }\n    }\n  }\n\n  addCommand(keybinding: number, commandFunc: monaco.editor.ICommandHandler) {\n    this.codeEditor?.addCommand(keybinding, commandFunc, 'readyToExecute');\n  }\n\n  getValue() {\n    return this.codeEditor?.getValue();\n  }\n\n  toSuggestionController(srv: monaco.editor.IEditorContribution): SuggestionController {\n    return (srv as unknown) as SuggestionController;\n  }\n\n  setEditorContent(value) {\n    this.codeEditor?.setValue(value);\n  }\n\n  getCompletionItems(model: monaco.editor.IReadOnlyModel, position: monaco.Position): any {\n    const timeFilterDocs =\n      '##### Macro that uses the selected timerange in Grafana to filter the query.\\n\\n' +\n      '- `$__timeFilter()` -> Uses the ' +\n      this.defaultTimeField +\n      ' column\\n\\n' +\n      '- `$__timeFilter(datetimeColumn)` ->  Uses the specified datetime column to build the query.';\n\n    const textUntilPosition = model.getValueInRange({\n      startLineNumber: 1,\n      startColumn: 1,\n      endLineNumber: position.lineNumber,\n      endColumn: position.column,\n    });\n\n    if (!_.includes(textUntilPosition, '|')) {\n      return [];\n    }\n\n    if (!_.includes(textUntilPosition.toLowerCase(), 'where')) {\n      return [\n        {\n          label: 'where $__timeFilter(timeColumn)',\n          kind: monaco.languages.CompletionItemKind.Keyword,\n          insertText: {\n            value: 'where \\\\$__timeFilter(${0:' + this.defaultTimeField + '})',\n          },\n          documentation: {\n            value: timeFilterDocs,\n          },\n        },\n      ];\n    }\n\n    if (_.includes(model.getLineContent(position.lineNumber).toLowerCase(), 'where')) {\n      return [\n        {\n          label: '$__timeFilter(timeColumn)',\n          kind: monaco.languages.CompletionItemKind.Keyword,\n          insertText: {\n            value: '\\\\$__timeFilter(${0:' + this.defaultTimeField + '})',\n          },\n          documentation: {\n            value: timeFilterDocs,\n          },\n        },\n        {\n          label: '$__from',\n          kind: monaco.languages.CompletionItemKind.Keyword,\n          insertText: {\n            value: `\\\\$__from`,\n          },\n          documentation: {\n            value:\n              'Built-in variable that returns the from value of the selected timerange in Grafana.\\n\\n' +\n              'Example: `where ' +\n              this.defaultTimeField +\n              ' > $__from` ',\n          },\n        },\n        {\n          label: '$__to',\n          kind: monaco.languages.CompletionItemKind.Keyword,\n          insertText: {\n            value: `\\\\$__to`,\n          },\n          documentation: {\n            value:\n              'Built-in variable that returns the to value of the selected timerange in Grafana.\\n\\n' +\n              'Example: `where ' +\n              this.defaultTimeField +\n              ' < $__to` ',\n          },\n        },\n        {\n          label: '$__timeInterval',\n          kind: monaco.languages.CompletionItemKind.Keyword,\n          insertText: {\n            value: `\\\\$__timeInterval`,\n          },\n          documentation: {\n            value:\n              '##### Built-in variable that returns an automatic time grain suitable for the current timerange.\\n\\n' +\n              'Used with the bin() function - `bin(' +\n              this.defaultTimeField +\n              ', $__timeInterval)` \\n\\n' +\n              '[Grafana docs](http://docs.grafana.org/reference/templating/#the-interval-variable)',\n          },\n        },\n      ];\n    }\n\n    return [];\n  }\n\n  getSignatureHelp(model: monaco.editor.IReadOnlyModel, position: monaco.Position, token: monaco.CancellationToken) {\n    const textUntilPosition = model.getValueInRange({\n      startLineNumber: position.lineNumber,\n      startColumn: position.column - 14,\n      endLineNumber: position.lineNumber,\n      endColumn: position.column,\n    });\n\n    if (textUntilPosition !== '$__timeFilter(') {\n      return {} as monaco.languages.SignatureHelp;\n    }\n\n    const signature: monaco.languages.SignatureHelp = {\n      activeParameter: 0,\n      activeSignature: 0,\n      signatures: [\n        {\n          label: '$__timeFilter(timeColumn)',\n          parameters: [\n            {\n              label: 'timeColumn',\n              documentation:\n                'Default is ' +\n                this.defaultTimeField +\n                ' column. Datetime column to filter data using the selected date range. ',\n            },\n          ],\n        },\n      ],\n    };\n\n    return signature;\n  }\n\n  onDidChangeCursorSelection(event) {\n    if (event.source !== 'modelChange' || event.reason !== monaco.editor.CursorChangeReason.RecoverFromMarkers) {\n      return;\n    }\n    const lastChar = this.getCharAt(event.selection.positionLineNumber, event.selection.positionColumn - 1);\n\n    if (lastChar !== ' ') {\n      return;\n    }\n\n    this.triggerSuggestions();\n  }\n\n  triggerSuggestions() {\n    const suggestController = this.codeEditor?.getContribution('editor.contrib.suggestController');\n    if (!suggestController) {\n      return;\n    }\n\n    const convertedController = this.toSuggestionController(suggestController);\n\n    convertedController._model.cancel();\n    setTimeout(() => {\n      convertedController._model.trigger(true);\n    }, 10);\n  }\n\n  getCharAt(lineNumber: number, column: number) {\n    const model = this.codeEditor?.getModel();\n    if (!model) {\n      return '';\n    }\n    if (model.getLineCount() === 0 || model.getLineCount() < lineNumber) {\n      return '';\n    }\n    const line = model.getLineContent(lineNumber);\n    if (line.length < column || column < 1) {\n      return '';\n    }\n    return line[column - 1];\n  }\n}\n","/* eslint-disable */\n/* tslint:disable */\n///<reference path=\"../../node_modules/monaco-editor/monaco.d.ts\" />\n/* tslint:enable */\n/* eslint-enable */\n\nimport React from 'react';\nimport { AdxSchema } from '../types';\nimport KustoCodeEditor from './kusto_code_editor';\nimport { css } from 'emotion';\nimport { stylesFactory } from '@grafana/ui';\n\nimport config from 'grafana/app/core/config';\n\ninterface Props {\n  content: string;\n  defaultTimeField: string;\n  pluginBaseUrl: string;\n  getSchema: () => Promise<AdxSchema>;\n  onChange: (val: string) => void;\n  onExecute: () => void;\n}\n\ninterface MonacoState {}\n\nexport class KustoMonacoEditor extends React.Component<Props, MonacoState> {\n  monacoRef: React.RefObject<HTMLDivElement>;\n  styles: { editor: string };\n  kustoCodeEditor: KustoCodeEditor | undefined;\n\n  constructor(props: Props) {\n    super(props);\n    this.styles = this.getStyles();\n    this.monacoRef = React.createRef<HTMLDivElement>();\n    this.state = {\n      content: props.content,\n    };\n\n    if (!window.hasOwnProperty('monaco')) {\n      (window as any).System.import(`/${props.pluginBaseUrl}/libs/monaco.min.js`).then(() => {\n        setTimeout(() => {\n          this.initMonaco();\n        }, 1);\n      });\n    } else {\n      setTimeout(() => {\n        this.initMonaco();\n      }, 1);\n    }\n  }\n\n  initMonaco() {\n    this.kustoCodeEditor = new KustoCodeEditor(\n      this.monacoRef.current,\n      this.props.defaultTimeField,\n      this.props.getSchema,\n      config\n    );\n\n    this.kustoCodeEditor.initMonaco(this.props.content);\n\n    /* tslint:disable:no-bitwise */\n    this.kustoCodeEditor.addCommand(monaco.KeyMod.Shift | monaco.KeyCode.Enter, () => {\n      const newValue = this.kustoCodeEditor?.getValue();\n      this.props.onChange(newValue!);\n      this.props.onExecute();\n    });\n    /* tslint:enable:no-bitwise */\n\n    this.kustoCodeEditor.setOnDidChangeModelContent(() => {\n      const newValue = this.kustoCodeEditor?.getValue();\n      this.props.onChange(newValue!);\n    });\n\n    window.onresize = () => {\n      this.kustoCodeEditor?.resize();\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.kustoCodeEditor) {\n      this.kustoCodeEditor.disposeMonaco();\n    }\n  }\n\n  getStyles = stylesFactory(() => ({\n    editor: css`\n      width: 100%;\n      height: 350px;\n    `,\n  }));\n\n  render() {\n    return <div id=\"content\" tabIndex={0} className={this.styles.editor} ref={this.monacoRef}></div>;\n  }\n}\n","import React, { useCallback } from 'react';\nimport { css } from 'emotion';\nimport { SelectableValue } from '@grafana/data';\nimport { InlineFormLabel, Select, stylesFactory } from '@grafana/ui';\n\ninterface Props {\n  format: string;\n  onChangeFormat: (format: string) => void;\n  includeAdxTimeFormat: boolean;\n}\n\nconst formats: Array<SelectableValue<string>> = [\n  { label: 'Time series', value: 'time_series' },\n  { label: 'Table', value: 'table' },\n];\n\nconst adxTimeFormat: SelectableValue<string> = {\n  label: 'ADX Time series',\n  value: 'time_series_adx_series',\n};\n\nexport const QueryEditorResultFormat: React.FC<Props> = props => {\n  const { onChangeFormat } = props;\n  const onFormatChange = useCallback(\n    (selectable: SelectableValue<string>) => {\n      if (!selectable || !selectable.value) {\n        return;\n      }\n      onChangeFormat(selectable.value);\n    },\n    [onChangeFormat]\n  );\n\n  const styles = getStyles();\n\n  return (\n    <div className={styles.container}>\n      <InlineFormLabel className=\"query-keyword\" width={6}>\n        Format as\n      </InlineFormLabel>\n      <Select\n        options={props.includeAdxTimeFormat ? [...formats, adxTimeFormat] : formats}\n        value={props.format}\n        onChange={onFormatChange}\n      />\n    </div>\n  );\n};\n\nconst getStyles = stylesFactory(() => {\n  return {\n    container: css`\n      display: flex;\n      flex-direction: row;\n      margin-right: 4px;\n    `,\n  };\n});\n\nexport const selectResultFormat = (format?: string, includeAdxFormat?: boolean): string => {\n  const selected = formats.find(f => f.value === format);\n\n  if (includeAdxFormat && adxTimeFormat.value) {\n    if (adxTimeFormat.value === format) {\n      return adxTimeFormat.value;\n    }\n  }\n\n  if (selected && selected.value) {\n    return selected.value;\n  }\n\n  if (formats.length > 0 && formats[0].value) {\n    return formats[0].value;\n  }\n\n  return 'time_series';\n};\n","import React, { PureComponent } from 'react';\nimport { Icon, stylesFactory } from '@grafana/ui';\nimport { css } from 'emotion';\nimport { KustoQuery, AdxDataSourceOptions, AdxSchema } from 'types';\nimport { AdxDataSource } from 'datasource';\nimport { QueryEditorProps, SelectableValue } from '@grafana/data';\nimport { KustoMonacoEditor } from '../monaco/KustoMonacoEditor';\nimport { QueryEditorResultFormat, selectResultFormat } from 'components/QueryEditorResultFormat';\n\ntype Props = QueryEditorProps<AdxDataSource, KustoQuery, AdxDataSourceOptions>;\n\ninterface RawQueryEditorProps extends Props {\n  dirty?: boolean;\n  lastQueryError?: string;\n  lastQuery?: string;\n  timeNotASC?: boolean;\n  schema?: AdxSchema;\n  database: string;\n  templateVariableOptions: SelectableValue<string>;\n}\n\ninterface State {\n  showLastQuery?: boolean;\n  showHelp?: boolean;\n}\nconst defaultQuery = [\n  '//change this to create your own time series query',\n  '',\n  '<table name>',\n  '| where $__timeFilter(Timestamp)',\n  '// | summarize count() by <group by column>, bin(Timestamp, $__timeInterval)',\n  '// | order by Timestamp asc',\n].join('\\n');\n\nexport class RawQueryEditor extends PureComponent<RawQueryEditorProps, State> {\n  state: State = {};\n\n  onRawQueryChange = (kql: string) => {\n    const resultFormat = selectResultFormat(this.props.query.resultFormat, true);\n\n    this.props.onChange({\n      ...this.props.query,\n      query: kql,\n      database: this.props.database,\n      resultFormat,\n    });\n  };\n\n  onChangeResultFormat = (format: string) => {\n    this.props.onChange({\n      ...this.props.query,\n      resultFormat: format,\n    });\n  };\n\n  render() {\n    const { query, datasource, lastQueryError, lastQuery, timeNotASC, schema } = this.props;\n    const { showLastQuery, showHelp } = this.state;\n    const resultFormat = selectResultFormat(query.resultFormat, true);\n\n    const styles = getStyles();\n\n    if (!schema) {\n      return null;\n    }\n\n    return (\n      <div>\n        <KustoMonacoEditor\n          defaultTimeField=\"Timestamp\"\n          pluginBaseUrl={datasource.meta.baseUrl}\n          content={query.query || defaultQuery}\n          getSchema={async () => schema}\n          onChange={this.onRawQueryChange}\n          onExecute={this.props.onRunQuery}\n        />\n\n        <div className={styles.toolbar}>\n          <QueryEditorResultFormat\n            includeAdxTimeFormat={true}\n            format={resultFormat}\n            onChangeFormat={this.onChangeResultFormat}\n          />\n          <div className=\"gf-form\">\n            <label className=\"gf-form-label query-keyword\" onClick={() => this.setState({ showHelp: !showHelp })}>\n              Show Help <Icon name={showHelp ? 'angle-down' : 'angle-right'} />\n            </label>\n          </div>\n          <div className=\"gf-form\" ng-show=\"ctrl.lastQuery\">\n            <label\n              className=\"gf-form-label query-keyword\"\n              onClick={() => this.setState({ showLastQuery: !showLastQuery })}\n            >\n              Raw Query <Icon name={showLastQuery ? 'angle-down' : 'angle-right'} />\n            </label>\n          </div>\n\n          <div className=\"gf-form gf-form--grow\">\n            <div className=\"gf-form-label gf-form-label--grow\"></div>\n          </div>\n        </div>\n\n        {showLastQuery && (\n          <div className=\"gf-form\">\n            <pre className=\"gf-form-pre\">{lastQuery}</pre>\n          </div>\n        )}\n\n        {lastQueryError && (\n          <div className=\"gf-form\">\n            <pre className=\"gf-form-pre alert alert-error\">{lastQueryError}</pre>\n          </div>\n        )}\n\n        {timeNotASC && (\n          <div className=\"gf-form\">\n            <pre className=\"gf-form-pre alert alert-warning\">\n              Data is not sorted ascending by Time. Recommend adding an order by clause.\n            </pre>\n          </div>\n        )}\n\n        {showHelp && (\n          <div className=\"gf-form\">\n            <pre className=\"gf-form-pre alert alert-info\">\n              {`\n  Format as Table:\n  - Can return any set of columns.\n\n  Format as Time series:\n  - Requires exactly one column of Kusto type datetime. (tip: can use Kusto's project-away operator to remove columns).\n  - Requires at least one value column of a number type. Each value column is considered a metric.\n  - May optionally have one or more string columns. Each string column is considered as a key=value tag pair (where the key is the column name, and the value is the value of the column for each row).\n  - A time series is returned for each value column + unique set of string column values. Each series has name of valueColumnName { stringColumnName=columnValue, ... }. If there are no string columns in the request, the name will just be valueColumnName.\n  - Example Time Series Query:\n    AzureActivity\n      | where $__timeFilter()\n      | summarize count() by Category, bin(TimeGenerated, 60min)\n      | order by TimeGenerated asc\n\n  Format as ADX Time series:\n   - Used for queries that return Kusto's \"time series\" type, such as the make-series operator\n   - Must have a datetime column named \"Timestamp\"\n   - Example ADX Time series query:\n    let T = range Timestamp from $__timeFrom to $__timeTo step $__timeInterval * 4\n      | extend   Person = dynamic([\"Torkel\", \"Daniel\", \"Kyle\", \"Sofia\"]) \n      | extend   Place  = dynamic([\"EU\",     \"EU\",     \"US\",   \"EU\"]) \n      | mvexpand Person, Place\n      | extend   HatInventory = rand(5) \n      | project  Timestamp, tostring(Person), tostring(Place), HatInventory;\n    T | make-series avg(HatInventory) on Timestamp from $__timeFrom to $__timeTo step $__timeInterval * 4 by Person, Place;\n\n\n  Time Macros:\n  - $__timeFilter -&gt; TimeGenerated &ge; datetime(2018-06-05T18:09:58.907Z) and TimeGenerated &le; datetime(2018-06-05T20:09:58.907Z)\n  - $__timeFilter(datetimeColumn) -&gt;  datetimeColumn  &ge; datetime(2018-06-05T18:09:58.907Z) and datetimeColumn &le; datetime(2018-06-05T20:09:58.907Z)\n  - $__timeFrom -&gt;  datetime(2018-06-05T18:09:58.907Z) [the start time of the query]\n  - $__timeTo -&gt; datetime(2018-06-05T20:09:58.907Z) [the end time of the query]\n  - $__timeInterval -&gt; 5000ms [Grafana's recommended bin size based on the timespan of the query, in ms]\n\n  Templating Macros:\n  - $__escapeMulti($myTemplateVar) -&gt; $myTemplateVar should be a multi-value template variables that contains illegal characters\n  - $__contains(aColumn, $myTemplateVar) -&gt; aColumn in ($myTemplateVar)\n    If using the All option, then check the Include All Option checkbox and in the Custom all value field type in: all. If All is chosen -&gt; 1 == 1\n\n  Macro Examples:\n  - ¡ where $__timeFilter()\n  - | where TimeGenerated &ge; $__timeFrom() and TimeGenerated &le; $__timeTo()\n  - | summarize count() by Category, bin(TimeGenerated, $__timeInterval)`}\n            </pre>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst getStyles = stylesFactory(() => {\n  return {\n    toolbar: css`\n      display: flex;\n      flex-direction: row;\n      margin-top: 4px;\n    `,\n  };\n});\n","import React, { PropsWithChildren } from 'react';\nimport { InlineFormLabel } from '@grafana/ui';\n\nexport interface QueryEditorSectionProps {\n  label: string;\n}\n\nexport const QueryEditorSection: React.FC<PropsWithChildren<QueryEditorSectionProps>> = props => {\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel className=\"query-keyword\" width={12}>\n        {props.label}\n      </InlineFormLabel>\n      {props.children}\n    </div>\n  );\n};\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { css } from 'emotion';\nimport { stylesFactory, AsyncSelect } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\n\nimport { QueryEditorPropertyDefinition, QueryEditorProperty, QueryEditorPropertyType } from '../../types';\n\ninterface Props {\n  fields: QueryEditorPropertyDefinition[];\n  templateVariableOptions?: SelectableValue<string>;\n  value?: QueryEditorProperty;\n  onChange: (property: QueryEditorProperty) => void;\n  placeholder?: string;\n  allowCustom?: boolean;\n}\n\nexport const definitionToProperty = (definition: QueryEditorPropertyDefinition): QueryEditorProperty => {\n  return {\n    name: definition.value,\n    type: definition.type,\n  };\n};\n\nexport const QueryEditorField: React.FC<Props> = props => {\n  const {\n    value: propsValue,\n    fields,\n    allowCustom,\n    placeholder,\n    templateVariableOptions,\n    onChange: propsOnChange,\n  } = props;\n  const [prevValue, setPrevValue] = useState<QueryEditorProperty>((null as unknown) as QueryEditorProperty);\n  const styles = getStyles();\n  const options = useOptions(fields);\n  const value = useMemo(() => options.find(option => option.value === propsValue?.name), [options, propsValue]);\n  const loadOptions = useMemo(() => filterOptions(options, templateVariableOptions), [\n    options,\n    templateVariableOptions,\n  ]);\n  const onChange = useOnChange(props, propsValue, setPrevValue);\n  const onCloseMenu = useCallback(() => {\n    if (!value && prevValue) {\n      propsOnChange({ ...prevValue });\n    }\n\n    setPrevValue((null as unknown) as QueryEditorProperty);\n  }, [propsOnChange, setPrevValue, prevValue, value]);\n\n  return (\n    <div className={styles.container}>\n      <AsyncSelect\n        width={30}\n        onChange={onChange}\n        value={value}\n        defaultOptions={templateVariableOptions ? [templateVariableOptions, ...options] : options}\n        loadOptions={loadOptions}\n        placeholder={placeholder}\n        menuPlacement=\"bottom\"\n        allowCustomValue={allowCustom}\n        backspaceRemovesValue={true}\n        isClearable={true}\n        onCloseMenu={onCloseMenu}\n      />\n    </div>\n  );\n};\n\nconst getStyles = stylesFactory(() => {\n  return {\n    container: css`\n      margin-right: 4px;\n    `,\n  };\n});\n\n// Should remove this when I have fixed the underlying issue in the select component\n// it should use value as label if label is missing.\nconst useOptions = (options: QueryEditorPropertyDefinition[]): Array<SelectableValue<string>> => {\n  return useMemo(() => {\n    if (!options) {\n      return [];\n    }\n\n    return options.map(option => {\n      return {\n        label: option.label ?? option.value,\n        value: option.value,\n        type: option.type,\n      };\n    });\n  }, [options]);\n};\n\nconst useOnChange = (\n  { fields, allowCustom, templateVariableOptions, onChange }: Props,\n  currentValue: QueryEditorProperty | undefined,\n  setPrevValue: (value: QueryEditorProperty) => void\n) => {\n  return useCallback(\n    (selectable: SelectableValue<string>) => {\n      if (!selectable || (typeof selectable.value !== 'string' && currentValue)) {\n        const name: any = null;\n        const type = QueryEditorPropertyType.String;\n\n        onChange({ name, type });\n        if (currentValue) {\n          setPrevValue(currentValue);\n        }\n\n        return;\n      }\n\n      const { value } = selectable;\n      let field: QueryEditorPropertyDefinition | undefined = fields.find(o => o.value === value);\n\n      if (!field) {\n        field = templateVariableOptions?.options?.find(o => o.value === value);\n      }\n\n      if (!field && value && allowCustom) {\n        field = {\n          value,\n          type: QueryEditorPropertyType.String,\n        };\n      }\n\n      if (field) {\n        onChange({\n          name: field.value,\n          type: field.type,\n        });\n      }\n    },\n    [fields, onChange, templateVariableOptions, allowCustom, currentValue, setPrevValue]\n  );\n};\n\nexport const filterOptions = (\n  options: Array<SelectableValue<string>>,\n  templateVariableOptions?: SelectableValue<string>\n) => async (textSearchingFor: string) => {\n  const text = textSearchingFor.toLowerCase();\n  const allOptions = templateVariableOptions ? [templateVariableOptions, ...options] : options;\n  const exactMatchOptions = allOptions.filter(option => option.label?.toLowerCase().startsWith(text));\n  const anyMatchOptions = allOptions.filter(option => option.label?.toLowerCase().indexOf(text, 1) !== -1);\n  const sortedOptions = exactMatchOptions.concat(anyMatchOptions);\n  const uniqueOptions = [...new Set(sortedOptions)];\n\n  return uniqueOptions;\n};\n","import React from 'react';\nimport { SelectableValue } from '@grafana/data';\n\nimport { QueryEditorExpression, QueryEditorExpressionType, QueryEditorPropertyExpression } from '../../expressions';\nimport { isFieldExpression } from '../../guards';\nimport { QueryEditorProperty, QueryEditorPropertyDefinition } from '../../types';\nimport { QueryEditorSection, QueryEditorSectionProps } from '../QueryEditorSection';\nimport { QueryEditorField } from './QueryEditorField';\n\ninterface FieldSectionConfiguration {\n  defaultValue: QueryEditorExpression;\n}\n\nexport interface QueryEditorFieldSectionProps extends React.PropsWithChildren<QueryEditorSectionProps> {\n  fields: QueryEditorPropertyDefinition[];\n  templateVariableOptions: SelectableValue<string>;\n  value?: QueryEditorExpression;\n  onChange: (value: QueryEditorExpression) => void;\n  allowCustom?: boolean;\n}\n\nexport const QueryEditorFieldSection = (config: FieldSectionConfiguration): React.FC<QueryEditorFieldSectionProps> => {\n  return props => {\n    const { onChange: propsOnChange } = props;\n    const expression = props.value ?? config.defaultValue;\n\n    if (!isFieldExpression(expression)) {\n      return null;\n    }\n\n    return (\n      <QueryEditorSection label={props.label}>\n        <QueryEditorField\n          fields={props.fields}\n          templateVariableOptions={props.templateVariableOptions}\n          onChange={onChange(propsOnChange)}\n          value={expression.property}\n          allowCustom={props.allowCustom}\n        />\n        {props.children}\n      </QueryEditorSection>\n    );\n  };\n};\n\nconst onChange = (propsOnChange: (value: QueryEditorExpression) => void) => (property: QueryEditorProperty) => {\n  propsOnChange({\n    type: QueryEditorExpressionType.Property,\n    property,\n  } as QueryEditorPropertyExpression);\n};\n","import React from 'react';\nimport { QueryEditorPropertyType } from '../types';\nimport { QueryEditorFieldSectionProps, QueryEditorFieldSection } from 'editor/components/field/QueryEditorFieldSection';\nimport { QueryEditorPropertyExpression, QueryEditorExpressionType } from '../expressions';\n\nexport class QueryEditorFieldBuilder {\n  build(): React.FC<QueryEditorFieldSectionProps> {\n    return QueryEditorFieldSection({\n      defaultValue: this.buildFieldExpression(),\n    });\n  }\n\n  private buildFieldExpression(): QueryEditorPropertyExpression {\n    return {\n      type: QueryEditorExpressionType.Property,\n      property: {\n        name: '',\n        type: QueryEditorPropertyType.String,\n      },\n    };\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { AsyncMultiSelect } from '@grafana/ui';\nimport { ExpressionSuggestor } from '../types';\nimport { QueryEditorOperatorDefinition, QueryEditorOperator } from '../../types';\nimport { SelectableValue } from '@grafana/data';\n\ninterface Props {\n  values: string[] | undefined;\n  onChange: (expression: QueryEditorOperator<string[]>) => void;\n  operator: QueryEditorOperatorDefinition;\n  getSuggestions: ExpressionSuggestor;\n  templateVariableOptions: SelectableValue<string>;\n}\n\ninterface State {\n  defaultOptions: Array<SelectableValue<string>>;\n  isLoading: boolean;\n}\n\nexport class QueryEditorMultiOperator extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      defaultOptions: [props.templateVariableOptions],\n      isLoading: false,\n    };\n  }\n\n  onCreate = (value: string) => {\n    if (!value) {\n      return;\n    }\n    // Append the new value\n    const values = [...this.props.values, value];\n    this.props.onChange({\n      value: values,\n      name: this.props.operator.value,\n    });\n  };\n\n  onChange = (selectable: any) => {\n    if (!Array.isArray(selectable)) {\n      return;\n    }\n\n    this.props.onChange({\n      value: selectable.map(s => s.value),\n      name: this.props.operator.value,\n    });\n  };\n\n  getSuggestions = async (txt: string) => {\n    this.setState({ isLoading: true });\n\n    const options = await this.props.getSuggestions(txt);\n\n    this.setState({\n      defaultOptions: [this.props.templateVariableOptions, ...options],\n      isLoading: false,\n    });\n\n    return options;\n  };\n\n  render() {\n    const values = this.props.values || [];\n    const current = values.map(v => {\n      return { label: v, value: v };\n    });\n\n    return (\n      <AsyncMultiSelect\n        width={30}\n        placeholder=\"Start typing to add filters...\"\n        loadOptions={this.getSuggestions}\n        onOpenMenu={() => this.getSuggestions('')}\n        defaultOptions={this.state.defaultOptions}\n        isLoading={this.state.isLoading}\n        value={current}\n        onChange={this.onChange}\n        onCreateOption={this.onCreate}\n        noOptionsMessage=\"No options found\"\n        isClearable\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { AsyncSelect } from '@grafana/ui';\nimport { ExpressionSuggestor } from '../types';\nimport { QueryEditorOperatorDefinition, QueryEditorOperator } from '../../types';\nimport { SelectableValue } from '@grafana/data';\n\ninterface Props {\n  value: string | undefined;\n  onChange: (operator: QueryEditorOperator) => void;\n  operator: QueryEditorOperatorDefinition;\n  getSuggestions: ExpressionSuggestor;\n  templateVariableOptions: SelectableValue<string>;\n}\n\ninterface State {\n  defaultOptions: Array<SelectableValue<string>>;\n  isLoading: boolean;\n}\n\nexport class QueryEditorSingleOperator extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      defaultOptions: [props.templateVariableOptions],\n      isLoading: false,\n    };\n  }\n\n  onChange = (evt: SelectableValue<any>) => {\n    // Handle clearing the value\n    if (evt === null) {\n      this.props.onChange({\n        value: '',\n        name: this.props.operator.value,\n      });\n      return;\n    }\n    this.props.onChange({\n      value: `${evt.value}`, // Currently strings only\n      name: this.props.operator.value,\n    });\n  };\n\n  onCreate = (value: string) => {\n    if (!value) {\n      return;\n    }\n    this.props.onChange({\n      value,\n      name: this.props.operator.value,\n    });\n  };\n\n  getSuggestions = async (txt: string) => {\n    this.setState({ isLoading: true });\n\n    const options = await this.props.getSuggestions(txt);\n\n    this.setState({\n      defaultOptions: [this.props.templateVariableOptions, ...options],\n      isLoading: false,\n    });\n\n    return options;\n  };\n\n  render() {\n    const { value } = this.props;\n    const current = value\n      ? {\n          label: value,\n          value,\n        }\n      : undefined;\n\n    return (\n      <AsyncSelect\n        width={30}\n        placeholder=\"Start typing to add filters...\"\n        loadOptions={this.getSuggestions}\n        onOpenMenu={() => this.getSuggestions(value ?? '')}\n        defaultOptions={this.state.defaultOptions}\n        isLoading={this.state.isLoading}\n        value={current}\n        onChange={this.onChange}\n        onCreateOption={this.onCreate}\n        allowCustomValue={true}\n        backspaceRemovesValue\n        isClearable\n        noOptionsMessage=\"No options found\"\n      />\n    );\n  }\n}\n","import React, { useCallback } from 'react';\nimport { Select } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { QueryEditorOperatorDefinition, QueryEditorOperator } from '../../types';\n\ninterface Props {\n  value: boolean | undefined;\n  onChange: (operator: QueryEditorOperator<boolean>) => void;\n  operator: QueryEditorOperatorDefinition;\n}\n\nconst options: Array<SelectableValue<boolean>> = [\n  { value: true, label: 'True' },\n  { value: false, label: 'False' },\n];\n\nexport const QueryEditorBoolOperator: React.FC<Props> = props => {\n  const onChange = useCallback(\n    (selectable: SelectableValue<boolean>) => {\n      if (!selectable || typeof selectable.value !== 'boolean') {\n        return;\n      }\n\n      props.onChange({\n        name: props.operator.value,\n        value: selectable.value,\n      });\n    },\n    [props]\n  );\n\n  return <Select width={15} options={options} value={props.value} onChange={onChange} menuPlacement=\"bottom\" />;\n};\n","import _ from 'lodash';\nimport { QueryEditorOperatorDefinition, QueryEditorProperty, QueryEditorPropertyType } from '../../types';\n\nexport const parseOperatorValue = (\n  property: QueryEditorProperty,\n  definition: QueryEditorOperatorDefinition,\n  value: any,\n  defaultValue: any\n) => {\n  if (definition.multipleValues) {\n    if (Array.isArray(value)) {\n      return tryToCastArrayToPropertyType(property, value);\n    }\n    return tryToCastArrayToPropertyType(property, [value]);\n  }\n\n  const casted = tryToCastToPropertyType(property, value);\n  return _.isUndefined(casted) ? defaultValue : casted;\n};\n\nconst tryToCastArrayToPropertyType = (property: QueryEditorProperty, value: any[]) => {\n  return value.reduce((all: any[], v) => {\n    const casted = tryToCastToPropertyType(property, v);\n\n    if (_.isUndefined(casted)) {\n      return all;\n    }\n\n    all.push(casted);\n    return all;\n  }, []);\n};\n\nconst tryToCastToPropertyType = (property: QueryEditorProperty, value: any) => {\n  switch (property.type) {\n    case QueryEditorPropertyType.Boolean:\n      return toBoolean(value, false);\n\n    case QueryEditorPropertyType.Number:\n      return toNumber(value, 0);\n\n    default:\n      return;\n  }\n};\n\nconst toNumber = (value: any, defaultValue: number): number => {\n  if (_.isNumber(value)) {\n    return _.toNumber(value);\n  }\n\n  if (typeof value === 'boolean') {\n    return value ? 1 : 0;\n  }\n\n  return defaultValue;\n};\n\nconst toBoolean = (value: any, defaultValue: boolean): boolean => {\n  if (typeof value === 'boolean') {\n    return value;\n  }\n\n  if (typeof value === 'string') {\n    const comparable = _.toLower(_.trim(value));\n\n    if (_.startsWith(comparable, 't')) {\n      return true;\n    }\n\n    if (_.startsWith(comparable, '1')) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (typeof value === 'number') {\n    return value > 0;\n  }\n\n  return defaultValue;\n};\n","import React, { useCallback, useState } from 'react';\nimport { Input } from '@grafana/ui';\nimport { QueryEditorOperatorDefinition, QueryEditorOperator } from '../../types';\n\ninterface Props {\n  value: string | undefined;\n  onChange: (operator: QueryEditorOperator<string>) => void;\n  operator: QueryEditorOperatorDefinition;\n}\n\nexport const QueryEditorStringOperator: React.FC<Props> = props => {\n  const [value, setValue] = useState<string>(props.value ?? '');\n  const {\n    onChange,\n    operator: { value: operatorValue },\n  } = props;\n\n  const onChangeInput = useCallback(\n    (event: React.FormEvent<HTMLInputElement>) => {\n      setValue(event.currentTarget.value);\n    },\n    [setValue]\n  );\n\n  const onBlurInput = useCallback(\n    (event: React.FocusEvent<HTMLInputElement>) => {\n      onChange({\n        name: operatorValue,\n        value: event.currentTarget.value,\n      });\n    },\n    [onChange, operatorValue]\n  );\n\n  return <Input width={30} value={value} onChange={onChangeInput} onBlur={onBlurInput} />;\n};\n","import React, { useCallback, useState } from 'react';\nimport { Input } from '@grafana/ui';\nimport { QueryEditorOperatorDefinition, QueryEditorOperator } from '../../types';\n\ninterface Props {\n  value: number | undefined;\n  onChange: (operator: QueryEditorOperator<number>) => void;\n  operator: QueryEditorOperatorDefinition;\n}\n\nexport const QueryEditorNumberOperator: React.FC<Props> = props => {\n  const [value, setValue] = useState<string>(String(props.value ?? 0));\n  const {\n    onChange,\n    operator: { value: operatorValue },\n  } = props;\n\n  const onChangeInput = useCallback(\n    (event: React.FormEvent<HTMLInputElement>) => {\n      setValue(event.currentTarget.value);\n    },\n    [setValue]\n  );\n\n  const onBlurInput = useCallback(\n    (event: React.FocusEvent<HTMLInputElement>) => {\n      onChange({\n        name: operatorValue,\n        value: parseToNumber(event.currentTarget.value),\n      });\n    },\n    [onChange, operatorValue]\n  );\n\n  return <Input width={30} value={value} onChange={onChangeInput} onBlur={onBlurInput} />;\n};\n\nconst parseToNumber = (value: string | undefined): number => {\n  if (!value) {\n    return 0;\n  }\n\n  if (isNaN((value as unknown) as number)) {\n    return 0;\n  }\n\n  return parseInt(value, 10);\n};\n","import React, { PureComponent } from 'react';\nimport { css } from 'emotion';\nimport { Select, stylesFactory, Button } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { ExpressionSuggestor } from '../types';\nimport {\n  QueryEditorOperatorDefinition,\n  QueryEditorOperator,\n  QueryEditorProperty,\n  QueryEditorPropertyType,\n} from '../../types';\nimport { QueryEditorMultiOperator } from './QueryEditorMultiOperator';\nimport { QueryEditorSingleOperator } from './QueryEditorSingleOperator';\nimport { QueryEditorBoolOperator } from './QueryEditorBoolOperator';\nimport { isMultiOperator, isBoolOperator, isSingleOperator, isDateTimeOperator, isNumberOperator } from '../../guards';\nimport { parseOperatorValue } from './parser';\nimport { QueryEditorStringOperator } from './QueryEditorStringOperator';\nimport { QueryEditorNumberOperator } from './QueryEditorNumberOperator';\n\ninterface Props {\n  value?: QueryEditorOperator;\n  property?: QueryEditorProperty;\n  operators: QueryEditorOperatorDefinition[];\n  onChange: (operator: QueryEditorOperator) => void;\n  getSuggestions: ExpressionSuggestor;\n  templateVariableOptions: SelectableValue<string>;\n}\n\nexport const definitionToOperator = (definition: QueryEditorOperatorDefinition): QueryEditorOperator => {\n  if (definition.booleanValues) {\n    const defaultValue: QueryEditorOperator<boolean> = {\n      name: definition.value,\n      value: false,\n    };\n\n    return defaultValue;\n  }\n\n  if (definition.multipleValues) {\n    const defaultValue: QueryEditorOperator<any[]> = {\n      name: definition.value,\n      value: [],\n    };\n\n    return defaultValue;\n  }\n\n  const defaultValue: QueryEditorOperator = {\n    name: definition.value,\n    value: '',\n  };\n\n  return defaultValue;\n};\n\nexport class QueryEditorOperatorComponent extends PureComponent<Props> {\n  onChangeOperator = (selectable: SelectableValue<string>) => {\n    if (selectable && selectable.value) {\n      const { property, value } = this.props;\n      const definition = this.props.operators.find(o => o.value === selectable.value);\n\n      if (!definition || !property) {\n        return;\n      }\n\n      if (!value) {\n        this.props.onChange(definitionToOperator(definition));\n        return;\n      }\n\n      const operator = definitionToOperator(definition);\n      const defaultValue = operator.value;\n      const currentValue = value.value;\n      operator.value = parseOperatorValue(property, definition, currentValue, defaultValue);\n\n      this.props.onChange(operator);\n    }\n  };\n\n  onChangeValue = (operator: QueryEditorOperator) => {\n    this.props.onChange(operator);\n  };\n\n  render() {\n    const { operators, value, getSuggestions, templateVariableOptions, property } = this.props;\n    const styles = getStyles();\n    const definition = operators.find(o => o.value === value?.name);\n\n    return (\n      <>\n        <div className={styles.container}>\n          <Select\n            isSearchable={true}\n            options={operators}\n            value={definition?.value}\n            onChange={this.onChangeOperator}\n            menuPlacement=\"bottom\"\n            renderControl={React.forwardRef(({ value, isOpen, invalid, ...otherProps }, ref) => {\n              return (\n                <Button ref={ref} {...otherProps} variant=\"secondary\">\n                  {definition?.label || definition?.value || '?'}\n                </Button>\n              );\n            })}\n          />\n        </div>\n        {renderOperatorInput(\n          definition,\n          value,\n          this.onChangeValue,\n          getSuggestions,\n          templateVariableOptions,\n          property?.type\n        )}\n      </>\n    );\n  }\n}\n\nconst renderOperatorInput = (\n  definition: QueryEditorOperatorDefinition | undefined,\n  operator: QueryEditorOperator | undefined,\n  onChangeValue: (expression: QueryEditorOperator) => void,\n  getSuggestions: ExpressionSuggestor,\n  templateVariableOptions: SelectableValue<string>,\n  propertyType: QueryEditorPropertyType | undefined\n) => {\n  if (!definition) {\n    return null;\n  }\n\n  const styles = getStyles();\n\n  if (isDateTimeOperator(operator, propertyType)) {\n    return (\n      <div className={styles.container}>\n        <QueryEditorStringOperator operator={definition} value={operator?.value} onChange={onChangeValue} />\n      </div>\n    );\n  }\n\n  if (isNumberOperator(operator, propertyType)) {\n    return (\n      <div className={styles.container}>\n        <QueryEditorNumberOperator operator={definition} value={operator?.value} onChange={onChangeValue} />\n      </div>\n    );\n  }\n\n  if (definition.multipleValues && (isMultiOperator(operator) || !operator)) {\n    return (\n      <div className={styles.container}>\n        <QueryEditorMultiOperator\n          operator={definition}\n          values={operator?.value ?? []}\n          onChange={onChangeValue}\n          getSuggestions={getSuggestions}\n          templateVariableOptions={templateVariableOptions}\n        />\n      </div>\n    );\n  }\n\n  if (definition.booleanValues && (isBoolOperator(operator) || !operator)) {\n    return (\n      <div className={styles.container}>\n        <QueryEditorBoolOperator operator={definition} value={operator?.value} onChange={onChangeValue} />\n      </div>\n    );\n  }\n\n  if (!definition.multipleValues && (isSingleOperator(operator) || !operator)) {\n    return (\n      <div className={styles.container}>\n        <QueryEditorSingleOperator\n          operator={definition}\n          value={operator?.value}\n          onChange={onChangeValue}\n          getSuggestions={getSuggestions}\n          templateVariableOptions={templateVariableOptions}\n        />\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst getStyles = stylesFactory(() => {\n  return {\n    container: css`\n      margin-right: 4px;\n      /* when Grafanas Select has labels */\n      div[class*='grafana-select-option-description'] {\n        white-space: nowrap;\n      }\n      /* fallback until Grafanas Select has labels */\n      [aria-label*='Select options menu'] {\n        div {\n          div {\n            div {\n              div {\n                div {\n                  white-space: nowrap;\n                }\n              }\n            }\n          }\n        }\n      }\n    `,\n  };\n});\n","import React, { PureComponent } from 'react';\nimport { css } from 'emotion';\nimport _ from 'lodash';\nimport { stylesFactory } from '@grafana/ui';\nimport { SkippableExpressionSuggestor } from '../types';\nimport {\n  QueryEditorPropertyDefinition,\n  QueryEditorOperatorDefinition,\n  QueryEditorProperty,\n  QueryEditorOperator,\n} from '../../types';\nimport { QueryEditorField } from '../field/QueryEditorField';\nimport { QueryEditorOperatorComponent, definitionToOperator } from '../operators/QueryEditorOperator';\nimport { SelectableValue } from '@grafana/data';\nimport { QueryEditorExpressionType, QueryEditorOperatorExpression } from '../../expressions';\nimport { parseOperatorValue } from '../operators/parser';\nimport debounce from 'debounce-promise';\n\ninterface Props {\n  value?: QueryEditorOperatorExpression;\n  fields: QueryEditorPropertyDefinition[];\n  templateVariableOptions: SelectableValue<string>;\n  operators: QueryEditorOperatorDefinition[];\n  onChange: (expression: QueryEditorOperatorExpression) => void;\n  getSuggestions: SkippableExpressionSuggestor;\n}\n\ninterface State {\n  // operators we can use for the field\n  operators: QueryEditorOperatorDefinition[];\n}\n\nexport class QueryEditorFieldAndOperator extends PureComponent<Props, State> {\n  state: State = { operators: [] };\n\n  componentDidMount = () => {\n    const field = this.props.value?.property;\n    if (field) {\n      this.updateOperators(field);\n    }\n  };\n\n  // Find the valid operators to the given field and save it in state\n  updateOperators = (field: QueryEditorProperty): QueryEditorOperatorDefinition[] => {\n    const operators: QueryEditorOperatorDefinition[] = [];\n    for (const op of this.props.operators) {\n      if (op.supportTypes.includes(field.type)) {\n        operators.push(op);\n      }\n    }\n    this.setState({ operators });\n    return operators;\n  };\n\n  onFieldChanged = (property: QueryEditorProperty) => {\n    let next: QueryEditorOperatorExpression = {\n      ...this.props.value!,\n      property,\n    };\n\n    const operators = this.updateOperators(property);\n    const currentOperator = next.operator?.name;\n    const definition = operators.find(op => op.value === currentOperator);\n\n    if (operators.length && !definition) {\n      next.operator = definitionToOperator(operators[0]);\n      const defaultValue = next.operator.value;\n      const currentValue = this.props.value?.operator.value;\n      next.operator.value = parseOperatorValue(next.property, operators[0], currentValue, defaultValue);\n    }\n\n    if (!definition) {\n      return this.props.onChange(next);\n    }\n\n    // Give it default values\n    next.operator = definitionToOperator(definition);\n    const defaultValue = next.operator.value;\n    const currentValue = this.props.value?.operator.value;\n    next.operator.value = parseOperatorValue(next.property, definition, currentValue, defaultValue);\n    this.props.onChange(next);\n  };\n\n  onOperatorChange = (operator: QueryEditorOperator) => {\n    this.props.onChange({\n      ...this.props.value!,\n      operator,\n    });\n  };\n\n  getSuggestions = debounce(\n    async (txt: string) => {\n      if (!this.props.value) {\n        return [];\n      }\n\n      const filter = createFilter(this.props.value.property, txt);\n      const results = await this.props.getSuggestions(filter);\n\n      if (Array.isArray(this.props.templateVariableOptions?.options)) {\n        const variables = this.props.templateVariableOptions.options.filter(v => {\n          if (typeof v?.value === 'string') {\n            return v.value.indexOf(txt) > -1;\n          }\n          return false;\n        });\n\n        Array.prototype.push.apply(results, variables);\n      }\n\n      return results;\n    },\n    800,\n    { leading: false }\n  );\n\n  render() {\n    const { value, fields, templateVariableOptions } = this.props;\n    const { operators } = this.state;\n\n    const styles = getStyles();\n    const showOperators = value?.operator || value?.property;\n\n    return (\n      <div className={styles.container}>\n        <QueryEditorField\n          value={value?.property}\n          fields={fields}\n          templateVariableOptions={templateVariableOptions}\n          onChange={this.onFieldChanged}\n          placeholder=\"Choose column...\"\n        />\n        {showOperators && (\n          <QueryEditorOperatorComponent\n            value={value?.operator}\n            operators={operators}\n            onChange={this.onOperatorChange}\n            getSuggestions={this.getSuggestions}\n            property={value?.property}\n            templateVariableOptions={templateVariableOptions}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst getStyles = stylesFactory(() => {\n  return {\n    container: css`\n      display: flex;\n      flex-direction: row;\n    `,\n  };\n});\n\nconst createFilter = (property: QueryEditorProperty, value: string): QueryEditorOperatorExpression => {\n  if (!value) {\n    return {\n      type: QueryEditorExpressionType.Operator,\n      property: property,\n      operator: {\n        name: 'isnotempty',\n        value,\n      },\n    };\n  }\n\n  return {\n    type: QueryEditorExpressionType.Operator,\n    property: property,\n    operator: {\n      name: 'contains',\n      value,\n    },\n  };\n};\n","import React, { useCallback } from 'react';\nimport { QueryEditorExpression, QueryEditorArrayExpression } from '../expressions';\n\ninterface Props {\n  id: string;\n  value: QueryEditorArrayExpression;\n  onChange: (value: QueryEditorArrayExpression) => void;\n  children: (props: ChildProps) => React.ReactElement | null;\n}\n\ninterface ChildProps {\n  index: number;\n  onChange: (value: QueryEditorExpression) => void;\n  onRemove: () => void;\n  onAdd: (value: QueryEditorExpression) => void;\n  value?: QueryEditorExpression;\n}\n\nexport const QueryEditorRepeater: React.FC<Props> = props => {\n  const { onChange: propsOnChange, children, value, id } = props;\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const onChange = useCallback(\n    (index: number, expression?: QueryEditorExpression) => {\n      const { expressions } = value;\n      const next = Array.from(expressions);\n\n      if (expression) {\n        next.splice(index, 1, expression);\n      } else {\n        next.splice(index, 1);\n      }\n\n      propsOnChange({\n        ...value,\n        expressions: next,\n      });\n    },\n    [children, propsOnChange, value]\n  );\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  if (!value?.expressions) {\n    return null;\n  }\n\n  const length = value.expressions.length;\n\n  return (\n    <>\n      {value.expressions.map((val, idx) => {\n        return (\n          <React.Fragment key={`${id}-${idx}`}>\n            {children({\n              index: idx,\n              value: val,\n              onChange: (expression: QueryEditorExpression) => onChange(idx, expression),\n              onAdd: (expression: QueryEditorExpression) => onChange(length, expression),\n              onRemove: () => onChange(idx),\n            })}\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n};\n","import React from 'react';\nimport { css } from 'emotion';\nimport { QueryEditorOperatorDefinition, QueryEditorPropertyDefinition } from '../../types';\nimport { QueryEditorSectionProps, QueryEditorSection } from '../QueryEditorSection';\nimport { SelectableValue } from '@grafana/data';\nimport { SearchExpressionSuggestor, SkippableExpressionSuggestor } from '../types';\nimport {\n  QueryEditorArrayExpression,\n  QueryEditorOperatorExpression,\n  QueryEditorExpressionType,\n} from '../../expressions';\nimport { isFieldAndOperator, isOrExpression } from 'editor/guards';\nimport { QueryEditorFieldAndOperator } from './QueryEditorFieldAndOperator';\nimport { Button, Select, stylesFactory, InlineFormLabel } from '@grafana/ui';\nimport { QueryEditorRepeater } from '../QueryEditorRepeater';\n\ninterface FilterSectionConfiguration {\n  operators: QueryEditorOperatorDefinition[];\n  defaultValue: QueryEditorOperatorExpression;\n}\n\nexport interface QueryEditorFilterSectionProps extends QueryEditorSectionProps {\n  fields: QueryEditorPropertyDefinition[];\n  templateVariableOptions: SelectableValue<string>;\n  value: QueryEditorArrayExpression;\n  onChange: (value: QueryEditorArrayExpression) => void;\n  getSuggestions: SearchExpressionSuggestor;\n}\n\nexport const QueryEditorFilterSection = (\n  config: FilterSectionConfiguration\n): React.FC<QueryEditorFilterSectionProps> => {\n  return props => {\n    const styles = getStyles();\n\n    const getSuggestions = (index: string): SkippableExpressionSuggestor => {\n      return (search: QueryEditorOperatorExpression) => props.getSuggestions(index, search);\n    };\n\n    if (props.value?.expressions?.length === 0) {\n      return (\n        <QueryEditorSection label={props.label}>\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              const next: QueryEditorArrayExpression = {\n                ...props.value,\n                expressions: [\n                  {\n                    type: QueryEditorExpressionType.Or,\n                    expressions: [config.defaultValue],\n                  } as QueryEditorArrayExpression,\n                ],\n              };\n\n              props.onChange(next);\n            }}\n            icon=\"plus\"\n          />\n        </QueryEditorSection>\n      );\n    }\n\n    return (\n      <QueryEditorRepeater id=\"filter-and\" value={props.value} onChange={props.onChange}>\n        {filterProps => {\n          if (!isOrExpression(filterProps.value)) {\n            return null;\n          }\n\n          if (filterProps.value?.expressions?.length === 0) {\n            if (filterProps.index > 0) {\n              return null;\n            }\n\n            return (\n              <QueryEditorSection label={props.label}>\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => {\n                    const expression: QueryEditorArrayExpression = {\n                      type: QueryEditorExpressionType.Or,\n                      expressions: [config.defaultValue],\n                    };\n\n                    filterProps.onChange(expression);\n                  }}\n                  icon=\"plus\"\n                />\n              </QueryEditorSection>\n            );\n          }\n\n          return (\n            <QueryEditorSection label={props.label}>\n              <div className={styles.container}>\n                <QueryEditorRepeater id=\"filter-or\" value={filterProps.value} onChange={filterProps.onChange}>\n                  {operatorProps => {\n                    if (!isFieldAndOperator(operatorProps.value)) {\n                      console.log('invalid fieldandoperator-expression');\n                      return null;\n                    }\n\n                    const isFirst = operatorProps.index === 0;\n                    const rowStyles = isFirst ? styles.row : styles.rowWithSpacing;\n\n                    return (\n                      <div className={rowStyles}>\n                        {!isFirst && (\n                          <InlineFormLabel className=\"query-keyword\" width={3}>\n                            or\n                          </InlineFormLabel>\n                        )}\n                        <QueryEditorFieldAndOperator\n                          value={operatorProps.value}\n                          operators={config.operators}\n                          fields={props.fields}\n                          templateVariableOptions={props.templateVariableOptions}\n                          onChange={operatorProps.onChange}\n                          getSuggestions={getSuggestions(`${filterProps.index}-${operatorProps.index}`)}\n                        />\n                        <div className={styles.spacing}>\n                          <Button variant=\"secondary\" onClick={operatorProps.onRemove} icon=\"minus\" />\n                        </div>\n                        {isFirst && (\n                          <Select\n                            isSearchable={true}\n                            options={[\n                              {\n                                value: 'append-row',\n                                label: 'OR - include another option',\n                              },\n                              {\n                                value: 'new-row',\n                                label: `AND - add a new \"${props.label}\" clause`,\n                              },\n                            ]}\n                            onChange={value => {\n                              if (value?.value === 'append-row') {\n                                return operatorProps.onAdd(config.defaultValue);\n                              }\n\n                              if (value?.value === 'new-row') {\n                                return filterProps.onAdd({\n                                  type: QueryEditorExpressionType.Or,\n                                  expressions: [config.defaultValue],\n                                } as QueryEditorArrayExpression);\n                              }\n                            }}\n                            menuPlacement=\"bottom\"\n                            renderControl={React.forwardRef(({ value, isOpen, invalid, ...otherProps }, ref) => {\n                              return <Button ref={ref} {...otherProps} variant=\"secondary\" icon=\"plus\" />;\n                            })}\n                          />\n                        )}\n                      </div>\n                    );\n                  }}\n                </QueryEditorRepeater>\n              </div>\n            </QueryEditorSection>\n          );\n        }}\n      </QueryEditorRepeater>\n    );\n  };\n};\n\nconst getStyles = stylesFactory(() => {\n  const row = css`\n    display: flex;\n    flex-direction: row;\n  `;\n\n  return {\n    container: css`\n      display: flex;\n      flex-direction: column;\n    `,\n    row: row,\n    rowWithSpacing: css`\n      ${row}\n      margin-top: 4px;\n    `,\n    spacing: css`\n      margin-right: 4px;\n    `,\n  };\n});\n","import { QueryEditorOperatorDefinition, QueryEditorPropertyType } from '../types';\n\nexport class QueyEditorOperatorBuilder {\n  private label: string;\n  private description: string;\n  private types: QueryEditorPropertyType[];\n  private multiple: boolean;\n  private bool: boolean;\n\n  constructor(private value: string, private operators: QueryEditorOperatorDefinition[]) {\n    this.label = value;\n    this.types = [];\n    this.description = '';\n    this.multiple = false;\n    this.bool = false;\n  }\n\n  withLabel(label: string) {\n    this.label = label;\n    return this;\n  }\n\n  withDescription(description: string) {\n    this.description = description;\n    return this;\n  }\n\n  supportTypes(types: QueryEditorPropertyType[]) {\n    this.types = types;\n    return this;\n  }\n\n  multipleValues(multiple: boolean) {\n    this.multiple = multiple;\n    return this;\n  }\n\n  booleanValues(bool: boolean) {\n    this.bool = bool;\n    return this;\n  }\n\n  add(): void {\n    this.operators.push({\n      value: this.value,\n      supportTypes: this.types,\n      label: this.label,\n      description: this.description,\n      multipleValues: this.multiple,\n      booleanValues: this.bool,\n    });\n  }\n}\n","import React from 'react';\nimport { QueryEditorFilterSectionProps, QueryEditorFilterSection } from '../components/filter/QueryEditorFilterSection';\nimport { QueryEditorOperatorDefinition, QueryEditorPropertyType, QueryEditorProperty } from '../types';\nimport { QueyEditorOperatorBuilder } from './QueryEditorOperatorBuilder';\nimport { QueryEditorOperatorExpression, QueryEditorExpressionType } from '../expressions';\nimport { definitionToOperator } from '../components/operators/QueryEditorOperator';\n\nexport class QueryEditorFilterBuilder {\n  private operators: QueryEditorOperatorDefinition[];\n  //private multipleRows: boolean;\n\n  constructor() {\n    this.operators = [];\n    // this.multipleRows = false;\n  }\n\n  withOperators(operators: (builder: (value: string) => QueyEditorOperatorBuilder) => void) {\n    operators(value => new QueyEditorOperatorBuilder(value, this.operators));\n    return this;\n  }\n\n  withMultipleRows(value: boolean) {\n    // this.multipleRows = value;\n    return this;\n  }\n\n  build(): React.FC<QueryEditorFilterSectionProps> {\n    return QueryEditorFilterSection({\n      operators: this.operators,\n      defaultValue: this.buildOperatorExpression(),\n    });\n  }\n\n  private buildOperatorExpression(): QueryEditorOperatorExpression {\n    const operator = this.operators[0];\n\n    return {\n      type: QueryEditorExpressionType.Operator,\n      property: this.buildFieldExpression(),\n      operator: definitionToOperator(operator),\n    };\n  }\n\n  private buildFieldExpression(): QueryEditorProperty {\n    return {\n      name: '',\n      type: QueryEditorPropertyType.String,\n    };\n  }\n}\n","import React, { useState, useCallback } from 'react';\nimport { Input } from '@grafana/ui';\nimport { QueryEditorPropertyType } from '../../types';\nimport { QueryEditorFunctionParameterExpression, QueryEditorExpressionType } from '../../expressions';\n\ninterface Props {\n  name: string;\n  value: string | undefined;\n  fieldType: QueryEditorPropertyType;\n  description: string;\n  onChange: (expression: QueryEditorFunctionParameterExpression) => void;\n}\n\nexport const QueryEditorFunctionParameterSection: React.FC<Props> = props => {\n  const [value, setValue] = useState(props.value ?? '');\n\n  const onChange = useCallback(\n    (event: React.FormEvent<HTMLInputElement>) => {\n      if (!event || !event.currentTarget) {\n        return;\n      }\n      setValue(event.currentTarget.value);\n    },\n    [setValue]\n  );\n\n  const onBlur = useCallback(() => {\n    props.onChange({\n      type: QueryEditorExpressionType.FunctionParameter,\n      fieldType: props.fieldType,\n      value: value,\n      name: props.name,\n    });\n  }, [value, props]);\n\n  return <Input width={20} value={value} placeholder={props.description} onChange={onChange} onBlur={onBlur} />;\n};\n","import React, { useCallback, useEffect, useState, useMemo } from 'react';\nimport { css } from 'emotion';\nimport { InlineFormLabel, stylesFactory } from '@grafana/ui';\nimport {\n  QueryEditorPropertyDefinition,\n  QueryEditorFunctionDefinition,\n  QueryEditorFunctionParameter,\n  QueryEditorPropertyType,\n  QueryEditorProperty,\n} from '../../types';\nimport { QueryEditorField } from '../field/QueryEditorField';\nimport { SelectableValue } from '@grafana/data';\nimport { QueryEditorFunctionParameterSection } from '../field/QueryEditorFunctionParameterSection';\nimport {\n  QueryEditorReduceExpression,\n  QueryEditorFunctionParameterExpression,\n  QueryEditorExpressionType,\n} from '../../expressions';\n\ninterface Props {\n  fields: QueryEditorPropertyDefinition[];\n  templateVariableOptions: SelectableValue<string>;\n  functions: QueryEditorFunctionDefinition[];\n  value?: QueryEditorReduceExpression;\n  label?: string;\n  onChange: (expression: QueryEditorReduceExpression) => void;\n}\n\nexport const QueryEditorReduce: React.FC<Props> = props => {\n  const { value, functions, onChange } = props;\n  const [field, setField] = useState(props.value?.property);\n  const [reduce, setReduce] = useState(props.value?.reduce);\n  const [parameters, setParameters] = useState(props.value?.parameters);\n  const applyOnField = useApplyOnField(reduce, props.functions);\n  const styles = getStyles();\n\n  const onChangeField = useCallback(\n    (property: QueryEditorProperty) => {\n      setField(property);\n\n      // Set a reasonable value\n      if (!value?.reduce?.name) {\n        let reducer = functions.find(f => f.value === 'avg');\n        if (!reducer) {\n          reducer = functions[0];\n        }\n        setReduce({\n          name: reducer.value,\n          type: QueryEditorPropertyType.Function,\n        });\n      }\n    },\n    [setField, value, functions]\n  );\n\n  const onChangeReduce = useCallback(\n    (property: QueryEditorProperty) => {\n      setReduce(property);\n    },\n    [setReduce]\n  );\n\n  const onChangeParameter = useCallback(\n    (expression: QueryEditorFunctionParameterExpression[]) => {\n      setParameters(expression);\n    },\n    [setParameters]\n  );\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    if (field && reduce) {\n      const payload: QueryEditorReduceExpression = {\n        type: QueryEditorExpressionType.Reduce,\n        property: field,\n        reduce,\n        parameters: parameters,\n      };\n\n      onChange(payload); // adding onChange to dependency array below causes maximum call depth error\n    }\n  }, [field, reduce, parameters]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  const reduceParameters: QueryEditorFunctionParameter[] = getParameters(reduce, props.functions);\n\n  return (\n    <div className={styles.container}>\n      <QueryEditorField\n        value={reduce}\n        fields={props.functions}\n        onChange={onChangeReduce}\n        placeholder=\"Choose aggregation function...\"\n      />\n      {reduceParameters.length > 0 && (\n        <div className={styles.params}>\n          {reduceParameters.map(param => {\n            return (\n              <QueryEditorFunctionParameterSection\n                key={param.name}\n                name={param.name}\n                value={props.value?.parameters?.find(p => p.name === param.name)?.value}\n                description={param.description}\n                fieldType={param.type}\n                onChange={val => onChangeParameter([val])}\n              />\n            );\n          })}\n        </div>\n      )}\n      {applyOnField && (\n        <>\n          <InlineFormLabel width={2} className=\"query-keyword\">\n            {props.label ?? 'of'}\n          </InlineFormLabel>\n          <QueryEditorField\n            value={field}\n            fields={props.fields}\n            templateVariableOptions={props.templateVariableOptions}\n            onChange={onChangeField}\n            placeholder=\"Choose column...\"\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst getStyles = stylesFactory(() => {\n  return {\n    container: css`\n      display: flex;\n      flex-direction: row;\n    `,\n    params: css`\n      margin-right: 4px;\n    `,\n  };\n});\n\nconst getParameters = (\n  reduce: QueryEditorProperty | undefined,\n  functions: QueryEditorFunctionDefinition[]\n): QueryEditorFunctionParameter[] => {\n  if (!reduce) {\n    return [];\n  }\n  const func = functions.find(func => func.value === reduce.name);\n\n  return func?.parameters || [];\n};\n\nconst useApplyOnField = (\n  property: QueryEditorProperty | undefined,\n  functions: QueryEditorFunctionDefinition[]\n): boolean => {\n  return useMemo(() => {\n    if (!property) {\n      return functions[0]?.applyOnField ?? true;\n    }\n    const func = functions.find(f => f.value === property.name);\n    return func?.applyOnField ?? true;\n  }, [functions, property]);\n};\n","import React from 'react';\nimport { css } from 'emotion';\nimport { QueryEditorFunctionDefinition, QueryEditorPropertyDefinition } from '../../types';\nimport { QueryEditorSection, QueryEditorSectionProps } from '../QueryEditorSection';\nimport { SelectableValue } from '@grafana/data';\nimport { QueryEditorExpression, QueryEditorArrayExpression } from '../../expressions';\nimport { isReduceExpression } from 'editor/guards';\nimport { QueryEditorReduce } from './QueryEditorReduce';\nimport { Button, stylesFactory } from '@grafana/ui';\nimport { QueryEditorRepeater } from '../QueryEditorRepeater';\n\ninterface ReduceSectionConfiguration {\n  defaultValue: QueryEditorExpression;\n  functions: QueryEditorFunctionDefinition[];\n}\n\nexport interface QueryEditorReduceSectionProps extends QueryEditorSectionProps {\n  fields: QueryEditorPropertyDefinition[];\n  templateVariableOptions: SelectableValue<string>;\n  value: QueryEditorArrayExpression;\n  onChange: (value: QueryEditorArrayExpression) => void;\n}\n\nexport const QueryEditorReduceSection = (\n  config: ReduceSectionConfiguration\n): React.FC<QueryEditorReduceSectionProps> => {\n  return props => {\n    const styles = getStyles();\n\n    if (props.value.expressions.length === 0) {\n      return (\n        <QueryEditorSection label={props.label}>\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              const expression: QueryEditorArrayExpression = {\n                ...props.value,\n                expressions: [config.defaultValue],\n              };\n              props.onChange(expression);\n            }}\n            icon=\"plus\"\n          />\n        </QueryEditorSection>\n      );\n    }\n\n    return (\n      <QueryEditorSection label={props.label}>\n        <div className={styles.container}>\n          <QueryEditorRepeater id=\"reduce\" onChange={props.onChange} value={props.value}>\n            {childProps => {\n              if (!isReduceExpression(childProps.value)) {\n                return null;\n              }\n\n              const isFirst = childProps.index === 0;\n              const rowStyle = isFirst ? styles.row : styles.rowWithSpacing;\n\n              return (\n                <div className={rowStyle}>\n                  <QueryEditorReduce\n                    onChange={childProps.onChange}\n                    value={childProps.value}\n                    templateVariableOptions={props.templateVariableOptions}\n                    fields={props.fields}\n                    functions={config.functions}\n                  />\n                  <Button className={styles.spacing} variant=\"secondary\" onClick={childProps.onRemove} icon=\"minus\" />\n                  {isFirst && (\n                    <Button variant=\"secondary\" onClick={() => childProps.onAdd(config.defaultValue)} icon=\"plus\" />\n                  )}\n                </div>\n              );\n            }}\n          </QueryEditorRepeater>\n        </div>\n      </QueryEditorSection>\n    );\n  };\n};\n\nconst getStyles = stylesFactory(() => {\n  const row = css`\n    display: flex;\n    flex-direction: row;\n  `;\n\n  return {\n    container: css`\n      display: flex;\n      flex-direction: column;\n    `,\n    row: row,\n    rowWithSpacing: css`\n      ${row}\n      margin-top: 4px;\n    `,\n    spacing: css`\n      margin-right: 4px;\n    `,\n  };\n});\n","import { QueryEditorPropertyType, QueryEditorFunctionDefinition, QueryEditorFunctionParameter } from '../types';\n\nexport class QueryEditorFunctionBuilder {\n  private label: string;\n  private appliedOnField = true;\n  private parameters: QueryEditorFunctionParameter[] = [];\n\n  constructor(private value: string, private functions: QueryEditorFunctionDefinition[]) {\n    this.label = value;\n  }\n\n  withLabel(label: string) {\n    this.label = label;\n    return this;\n  }\n\n  withParameter(name: string, type: QueryEditorPropertyType, description: string) {\n    this.parameters.push({ name, type, description });\n    return this;\n  }\n\n  isAppliedOnField(value: boolean) {\n    this.appliedOnField = value;\n    return this;\n  }\n\n  add(): void {\n    this.functions.push({\n      value: this.value,\n      label: this.label,\n      type: QueryEditorPropertyType.Function,\n      parameters: this.parameters,\n      applyOnField: this.appliedOnField,\n    });\n  }\n}\n","import React from 'react';\nimport { QueryEditorFunctionDefinition, QueryEditorPropertyType, QueryEditorProperty } from '../types';\nimport { QueryEditorReduceSection, QueryEditorReduceSectionProps } from '../components/reduce/QueryEditorReduceSection';\nimport { QueryEditorFunctionBuilder } from './QueryEditorFunctionBuilder';\nimport { QueryEditorReduceExpression, QueryEditorExpressionType } from '../expressions';\n\nexport class QueryEditorReduceBuilder {\n  private functions: QueryEditorFunctionDefinition[];\n\n  constructor() {\n    this.functions = [];\n  }\n\n  withMultipleRows(value: boolean) {\n    return this;\n  }\n\n  withFunctions(functions: (builder: (value: string) => QueryEditorFunctionBuilder) => void) {\n    functions(value => new QueryEditorFunctionBuilder(value, this.functions));\n    return this;\n  }\n\n  build(): React.FC<QueryEditorReduceSectionProps> {\n    return QueryEditorReduceSection({\n      functions: this.functions,\n      defaultValue: this.buildReduceExpression(),\n    });\n  }\n\n  private buildReduceExpression(): QueryEditorReduceExpression {\n    return {\n      type: QueryEditorExpressionType.Reduce,\n      property: this.buildProperty(QueryEditorPropertyType.String),\n      reduce: this.buildProperty(QueryEditorPropertyType.Function),\n    };\n  }\n\n  private buildProperty(type: QueryEditorPropertyType): QueryEditorProperty {\n    return {\n      name: '',\n      type,\n    };\n  }\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { css } from 'emotion';\nimport { stylesFactory } from '@grafana/ui';\nimport { QueryEditorPropertyDefinition, QueryEditorPropertyType, QueryEditorProperty } from '../../types';\nimport { QueryEditorField } from '../field/QueryEditorField';\nimport { SelectableValue } from '@grafana/data';\nimport { QueryEditorGroupByExpression, QueryEditorExpressionType } from '../../expressions';\n\ninterface Props {\n  fields: QueryEditorPropertyDefinition[];\n  templateVariableOptions: SelectableValue<string>;\n  intervals: QueryEditorPropertyDefinition[];\n  value?: QueryEditorGroupByExpression;\n  onChange: (expression: QueryEditorGroupByExpression) => void;\n}\n\nexport const QueryEditorGroupBy: React.FC<Props> = props => {\n  const { intervals, onChange } = props;\n  const [field, setField] = useState(props.value?.property);\n  const [interval, setInterval] = useState(props.value?.interval);\n  const styles = getStyles();\n\n  const onChangeField = useCallback(\n    (property: QueryEditorProperty) => {\n      setField(property);\n      if (property.type === QueryEditorPropertyType.DateTime) {\n        setInterval({\n          type: QueryEditorPropertyType.Interval,\n          name: intervals[0].value,\n        });\n      }\n    },\n    [setField, intervals]\n  );\n\n  const onChangeInterval = useCallback(\n    (property: QueryEditorProperty) => {\n      setInterval(property);\n    },\n    [setInterval]\n  );\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    if (field) {\n      const payload: QueryEditorGroupByExpression = {\n        type: QueryEditorExpressionType.GroupBy,\n        property: field,\n        interval,\n      };\n\n      onChange(payload); // adding onChange to dependency array below causes maximum call depth error\n    }\n  }, [field, interval]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return (\n    <div className={styles.container}>\n      <QueryEditorField\n        value={field}\n        fields={props.fields}\n        templateVariableOptions={props.templateVariableOptions}\n        onChange={onChangeField}\n        placeholder=\"Choose column...\"\n      />\n      {field?.type === QueryEditorPropertyType.DateTime && (\n        <QueryEditorField\n          value={interval}\n          fields={props.intervals}\n          templateVariableOptions={props.templateVariableOptions}\n          onChange={onChangeInterval}\n          placeholder=\"Choose interval\"\n          allowCustom={true}\n        />\n      )}\n    </div>\n  );\n};\n\nconst getStyles = stylesFactory(() => {\n  return {\n    container: css`\n      display: flex;\n      flex-direction: row;\n    `,\n  };\n});\n","import React from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { Button, stylesFactory } from '@grafana/ui';\nimport { css } from 'emotion';\nimport { QueryEditorPropertyDefinition } from '../../types';\nimport { QueryEditorSection, QueryEditorSectionProps } from '../QueryEditorSection';\nimport { QueryEditorExpression, QueryEditorArrayExpression } from '../../expressions';\nimport { QueryEditorRepeater } from '../QueryEditorRepeater';\nimport { isGroupBy } from '../../guards';\nimport { QueryEditorGroupBy } from './QueryEditorGroupBy';\n\ninterface GroupBySectionConfiguration {\n  defaultValue: QueryEditorExpression;\n  intervals: QueryEditorPropertyDefinition[];\n}\n\nexport interface QueryEditorGroupBySectionProps extends QueryEditorSectionProps {\n  fields: QueryEditorPropertyDefinition[];\n  templateVariableOptions: SelectableValue<string>;\n  value: QueryEditorArrayExpression;\n  onChange: (value: QueryEditorArrayExpression) => void;\n}\n\nexport const QueryEditorGroupBySection = (\n  config: GroupBySectionConfiguration\n): React.FC<QueryEditorGroupBySectionProps> => {\n  return props => {\n    const styles = getStyles();\n\n    if (props.value.expressions.length === 0) {\n      return (\n        <QueryEditorSection label={props.label}>\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              const expression: QueryEditorArrayExpression = {\n                ...props.value,\n                expressions: [config.defaultValue],\n              };\n              props.onChange(expression);\n            }}\n            icon=\"plus\"\n          />\n        </QueryEditorSection>\n      );\n    }\n\n    return (\n      <QueryEditorSection label={props.label}>\n        <div className={styles.container}>\n          <QueryEditorRepeater id=\"group-by\" onChange={props.onChange} value={props.value}>\n            {childProps => {\n              if (!isGroupBy(childProps.value)) {\n                return null;\n              }\n\n              const isFirst = childProps.index === 0;\n              const rowStyle = isFirst ? styles.row : styles.rowWithSpacing;\n\n              return (\n                <div className={rowStyle}>\n                  <QueryEditorGroupBy\n                    onChange={childProps.onChange}\n                    value={childProps.value}\n                    templateVariableOptions={props.templateVariableOptions}\n                    fields={props.fields}\n                    intervals={config.intervals}\n                  />\n                  <Button className={styles.spacing} variant=\"secondary\" onClick={childProps.onRemove} icon=\"minus\" />\n                  {isFirst && (\n                    <Button variant=\"secondary\" onClick={() => childProps.onAdd(config.defaultValue)} icon=\"plus\" />\n                  )}\n                </div>\n              );\n            }}\n          </QueryEditorRepeater>\n        </div>\n      </QueryEditorSection>\n    );\n  };\n};\n\nconst getStyles = stylesFactory(() => {\n  const row = css`\n    display: flex;\n    flex-direction: row;\n  `;\n\n  return {\n    container: css`\n      display: flex;\n      flex-direction: column;\n    `,\n    row: row,\n    rowWithSpacing: css`\n      ${row}\n      margin-top: 4px;\n    `,\n    spacing: css`\n      margin-right: 4px;\n    `,\n  };\n});\n","import { QueryEditorPropertyType, QueryEditorPropertyDefinition } from '../types';\n\nexport class QueryEditorIntervalBuilder {\n  private label: string;\n\n  constructor(private value: string, private intervals: QueryEditorPropertyDefinition[]) {\n    this.label = value;\n  }\n\n  withLabel(label: string) {\n    this.label = label;\n    return this;\n  }\n\n  add(): void {\n    this.intervals.push({\n      value: this.value,\n      label: this.label,\n      type: QueryEditorPropertyType.Interval,\n    });\n  }\n}\n","import React from 'react';\nimport { QueryEditorPropertyDefinition, QueryEditorPropertyType } from '../types';\nimport {\n  QueryEditorGroupBySection,\n  QueryEditorGroupBySectionProps,\n} from '../components/groupBy/QueryEditorGroupBySection';\nimport { QueryEditorIntervalBuilder } from './QueryEditorIntervalBuilder';\nimport { QueryEditorGroupByExpression, QueryEditorExpressionType } from '../expressions';\n\nexport class QueryEditorGroupByBuilder {\n  private intervals: QueryEditorPropertyDefinition[];\n\n  constructor() {\n    this.intervals = [];\n  }\n\n  withMultipleRows(value: boolean) {\n    return this;\n  }\n\n  withIntervals(intervals: (builder: (value: string) => QueryEditorIntervalBuilder) => void) {\n    intervals(value => new QueryEditorIntervalBuilder(value, this.intervals));\n    return this;\n  }\n\n  build(): React.FC<QueryEditorGroupBySectionProps> {\n    return QueryEditorGroupBySection({\n      intervals: this.intervals,\n      defaultValue: this.buildGroupByExpressions(),\n    });\n  }\n\n  private buildGroupByExpressions(): QueryEditorGroupByExpression {\n    return {\n      type: QueryEditorExpressionType.GroupBy,\n      property: {\n        name: '',\n        type: QueryEditorPropertyType.String,\n      },\n    };\n  }\n}\n","import {\n  buildFieldQueryEditorSection,\n  buildFilterQueryEditorSection,\n  buildReduceQueryEditorSection,\n  buildGroupByQueryEditorSection,\n} from '../editor';\n\nimport { QueryEditorPropertyType } from '../editor/types';\n\nexport const KustoPropertyEditorSection = buildFieldQueryEditorSection(fieldSection => fieldSection.build());\n\nexport const KustoWhereEditorSection = buildFilterQueryEditorSection(filterSection =>\n  filterSection\n    .withOperators(operator => {\n      operator('==')\n        .supportTypes([\n          QueryEditorPropertyType.String,\n          QueryEditorPropertyType.Number,\n          QueryEditorPropertyType.DateTime,\n        ])\n        .withDescription('equal to')\n        .add();\n\n      operator('==')\n        .supportTypes([QueryEditorPropertyType.Boolean])\n        .withDescription('equal to')\n        .booleanValues(true)\n        .add();\n\n      operator('!=')\n        .supportTypes([\n          QueryEditorPropertyType.String,\n          QueryEditorPropertyType.Number,\n          QueryEditorPropertyType.DateTime,\n        ])\n        .withDescription('not equal to')\n        .add();\n\n      operator('!=')\n        .supportTypes([QueryEditorPropertyType.Boolean])\n        .withDescription('not equal to')\n        .booleanValues(true)\n        .add();\n\n      operator('>')\n        .supportTypes([QueryEditorPropertyType.Number, QueryEditorPropertyType.DateTime])\n        .withDescription('greater than')\n        .add();\n\n      operator('<')\n        .supportTypes([QueryEditorPropertyType.Number, QueryEditorPropertyType.DateTime])\n        .withDescription('less than')\n        .add();\n\n      operator('=~')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('equal to (case-insensitive)')\n        .add();\n\n      operator('!~')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('not equal to (case-insensitive)')\n        .add();\n\n      operator('in')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('in (case-sensitive)')\n        .multipleValues(true)\n        .add();\n\n      operator('in~')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('in (case-insensitive)')\n        .multipleValues(true)\n        .add();\n\n      operator('!in')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('not in (case-sensitive)')\n        .multipleValues(true)\n        .add();\n\n      operator('!in~')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('not in (case-insensitive)')\n        .multipleValues(true)\n        .add();\n\n      operator('contains')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('contains substring')\n        .multipleValues(false)\n        .add();\n\n      operator('!contains')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('does not contain substring')\n        .multipleValues(false)\n        .add();\n\n      operator('contains_cs')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('contains substring (case-sensitive)')\n        .multipleValues(false)\n        .add();\n\n      operator('!contains_cs')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('does not contain substring (case-sensitive)')\n        .multipleValues(false)\n        .add();\n\n      operator('endswith')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('ends with')\n        .multipleValues(false)\n        .add();\n\n      operator('!endswith')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('does not end with')\n        .multipleValues(false)\n        .add();\n\n      operator('endswith_cs')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('ends with (case-sensitive)')\n        .multipleValues(false)\n        .add();\n\n      operator('!endswith_cs')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('does not end with (case-sensitive)')\n        .multipleValues(false)\n        .add();\n\n      operator('startswith')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('starts with')\n        .multipleValues(false)\n        .add();\n\n      operator('!startsswith')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('does not start with')\n        .multipleValues(false)\n        .add();\n\n      operator('startswith_cs')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('starts with (case-sensitive)')\n        .multipleValues(false)\n        .add();\n\n      operator('!startswith_cs')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('does not start with (case-sensitive)')\n        .multipleValues(false)\n        .add();\n\n      operator('matches regex')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('regex string matching')\n        .multipleValues(false)\n        .add();\n\n      operator('has_any')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('any provided values matching')\n        .multipleValues(true)\n        .add();\n\n      operator('has')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('match if whole term exists in column')\n        .multipleValues(false)\n        .add();\n\n      operator('!has')\n        .supportTypes([QueryEditorPropertyType.String])\n        .withDescription('match if whole term not exists in column')\n        .multipleValues(false)\n        .add();\n    })\n    .withMultipleRows(true)\n    .build()\n);\n\nexport const KustoValueColumnEditorSection = buildReduceQueryEditorSection(reduceSection =>\n  reduceSection\n    .withFunctions(functions => {\n      functions('sum')\n        .withLabel('Sum')\n        .add();\n\n      functions('avg')\n        .withLabel('Avg')\n        .add();\n\n      functions('count')\n        .isAppliedOnField(false)\n        .withLabel('Count')\n        .add();\n\n      functions('dcount')\n        .withLabel('Dcount')\n        .add();\n\n      functions('max')\n        .withLabel('Max')\n        .add();\n\n      functions('min')\n        .withLabel('Min')\n        .add();\n\n      functions('percentile')\n        .withLabel('Percentile')\n        .withParameter('percentileParam', QueryEditorPropertyType.Number, 'percentile constant')\n        .add();\n    })\n    .withMultipleRows(true)\n    .build()\n);\n\nexport const KustoGroupByEditorSection = buildGroupByQueryEditorSection(groupBySection =>\n  groupBySection\n    .withIntervals(intervals => {\n      intervals('$__timeInterval')\n        .withLabel('auto')\n        .add();\n      intervals('1m')\n        .withLabel('1 minute')\n        .add();\n\n      intervals('5m')\n        .withLabel('5 minutes')\n        .add();\n\n      intervals('15m')\n        .withLabel('15 minutes')\n        .add();\n\n      intervals('30m')\n        .withLabel('30 minutes')\n        .add();\n\n      intervals('1h')\n        .withLabel('1 hour')\n        .add();\n\n      intervals('6h')\n        .withLabel('6 hours')\n        .add();\n\n      intervals('12h')\n        .withLabel('12 hours')\n        .add();\n\n      intervals('1d')\n        .withLabel('1 day')\n        .add();\n    })\n    .withMultipleRows(true)\n    .build()\n);\n","import React from 'react';\nimport { QueryEditorFilterSectionProps } from './components/filter/QueryEditorFilterSection';\nimport { QueryEditorFieldSectionProps } from './components/field/QueryEditorFieldSection';\nimport { QueryEditorFieldBuilder } from './builders/QueryEditorFieldBuilder';\nimport { QueryEditorFilterBuilder } from './builders/QueryEditorFilterBuilder';\nimport { QueryEditorReduceSectionProps } from './components/reduce/QueryEditorReduceSection';\nimport { QueryEditorReduceBuilder } from './builders/QueryEditorReduceBuilder';\nimport { QueryEditorGroupBySectionProps } from './components/groupBy/QueryEditorGroupBySection';\nimport { QueryEditorGroupByBuilder } from './builders/QueryEditorGroupByBuilder';\n\nexport const buildFieldQueryEditorSection = (\n  builder: (builder: QueryEditorFieldBuilder) => React.FC<QueryEditorFieldSectionProps>\n): React.FC<QueryEditorFieldSectionProps> => builder(new QueryEditorFieldBuilder());\n\nexport const buildFilterQueryEditorSection = (\n  builder: (builder: QueryEditorFilterBuilder) => React.FC<QueryEditorFilterSectionProps>\n): React.FC<QueryEditorFilterSectionProps> => builder(new QueryEditorFilterBuilder());\n\nexport const buildReduceQueryEditorSection = (\n  builder: (builder: QueryEditorReduceBuilder) => React.FC<QueryEditorReduceSectionProps>\n): React.FC<QueryEditorReduceSectionProps> => builder(new QueryEditorReduceBuilder());\n\nexport const buildGroupByQueryEditorSection = (\n  builder: (builder: QueryEditorGroupByBuilder) => React.FC<QueryEditorGroupBySectionProps>\n): React.FC<QueryEditorGroupBySectionProps> => builder(new QueryEditorGroupByBuilder());\n","import {\n  AdxColumnSchema,\n  AdxDatabaseSchema,\n  AdxFunctionSchema,\n  AdxTableSchema,\n  SchemaMapping,\n  SchemaMappingType,\n} from '../types';\nimport { AdxDataSource } from '../datasource';\nimport { cache } from './cache';\n\nconst schemaKey = 'AdxSchemaResolver';\n\nexport class AdxSchemaResolver {\n  constructor(private datasource: AdxDataSource) {}\n\n  private createCacheKey(addition: string): string {\n    return `${schemaKey}.${this.datasource.id}.${addition}`;\n  }\n\n  async getDatabases(): Promise<AdxDatabaseSchema[]> {\n    const schema = await this.datasource.getSchema();\n    return Object.keys(schema.Databases).map(key => schema.Databases[key]);\n  }\n\n  async getTablesForDatabase(databaseName: string): Promise<AdxTableSchema[]> {\n    const databases = await this.getDatabases();\n    const database = databases.find(db => db.Name === databaseName);\n\n    if (!database) {\n      return [];\n    }\n    return Object.keys(database.Tables).map(key => database.Tables[key]);\n  }\n\n  async getViewsForDatabase(databaseName: string): Promise<AdxTableSchema[]> {\n    const databases = await this.getDatabases();\n    const database = databases.find(db => db.Name === databaseName);\n\n    if (!database) {\n      return [];\n    }\n    return Object.keys(database.MaterializedViews).map(key => database.MaterializedViews[key]);\n  }\n\n  async getFunctionsForDatabase(databaseName: string): Promise<AdxFunctionSchema[]> {\n    const databases = await this.getDatabases();\n    const database = databases.find(db => db.Name === databaseName);\n\n    if (!database) {\n      return [];\n    }\n    return Object.keys(database.Functions).map(key => database.Functions[key]);\n  }\n\n  async getColumnsForTable(databaseName: string, tableName: string): Promise<AdxColumnSchema[]> {\n    const cacheKey = this.createCacheKey(`db.${databaseName}.${tableName}`);\n    const mapper = this.datasource.getSchemaMapper();\n\n    return cache(cacheKey, async () => {\n      const mapping = mapper.getMappingByValue(tableName);\n      const schema = await this.findSchema(databaseName, tableName, mapping);\n\n      if (!schema) {\n        return [];\n      }\n\n      if (mapping?.type === SchemaMappingType.function) {\n        schema.OrderedColumns = await this.datasource.getFunctionSchema(databaseName, mapping.value);\n      }\n\n      const dynamicColumns = schema.OrderedColumns.filter(column => column.CslType === 'dynamic').map(\n        column => column.Name\n      );\n\n      const schemaByColumn = await this.datasource.getDynamicSchema(\n        databaseName,\n        mapping?.name ?? tableName,\n        dynamicColumns\n      );\n\n      return schema.OrderedColumns.reduce((columns: AdxColumnSchema[], column) => {\n        const schemaForDynamicColumn = schemaByColumn[column.Name];\n\n        if (!Array.isArray(schemaForDynamicColumn)) {\n          columns.push(column);\n          return columns;\n        }\n\n        Array.prototype.push.apply(columns, schemaForDynamicColumn);\n        return columns;\n      }, []);\n    });\n  }\n\n  private async findSchema(\n    databaseName: string,\n    tableName: string,\n    mapping?: SchemaMapping\n  ): Promise<AdxTableSchema | undefined> {\n    const [tables, funcs, views] = await Promise.all([\n      this.getTablesForDatabase(databaseName),\n      this.getFunctionsForDatabase(databaseName),\n      this.getViewsForDatabase(databaseName),\n    ]);\n\n    const name = mapping?.name ?? tableName;\n\n    const table = tables.find(t => t.Name === name);\n    if (table) {\n      return table;\n    }\n\n    const view = views.find(v => v.Name === name);\n    if (view) {\n      return view;\n    }\n\n    const func = funcs.find(f => f.Name === name);\n    if (func) {\n      return {\n        Name: func.Name,\n        OrderedColumns: func.OutputColumns,\n      };\n    }\n\n    return;\n  }\n}\n","import React from 'react';\nimport { css } from 'emotion';\nimport { Icon, stylesFactory, useTheme } from '@grafana/ui';\nimport { GrafanaTheme } from '@grafana/data';\n\nexport const SchemaLoading: React.FC<{}> = props => {\n  const theme = useTheme();\n  const styles = getStyles(theme);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.icon}>\n        <Icon className=\"spin-clockwise\" name=\"sync\" />\n      </div>\n      <span>One moment, your schema is loading ...</span>\n    </div>\n  );\n};\n\ninterface ErrorProps {\n  message: string;\n}\n\nexport const SchemaError: React.FC<ErrorProps> = props => {\n  const theme = useTheme();\n  const styles = getStyles(theme);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.icon}>\n        <Icon name=\"exclamation-triangle\" className={styles.error} />\n      </div>\n      <span className={styles.error}>{props.message}</span>\n    </div>\n  );\n};\n\nexport const SchemaWarning: React.FC<ErrorProps> = props => {\n  const theme = useTheme();\n  const styles = getStyles(theme);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.icon}>\n        <Icon name=\"exclamation-triangle\" className={styles.warning} />\n      </div>\n      <span className={styles.warning}>{props.message}</span>\n    </div>\n  );\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    container: css`\n      margin-top: 10px;\n      display: flex;\n      flex-direction: row;\n    `,\n    icon: css`\n      margin-right: 4px;\n    `,\n    error: css`\n      color: ${theme.colors.formInputBorderInvalid};\n    `,\n    warning: css`\n      color: ${theme.palette.yellow};\n    `,\n  };\n});\n","import React, { useMemo, useCallback } from 'react';\nimport { useAsync } from 'react-use';\nimport { css } from 'emotion';\nimport { KustoQuery, AdxSchema, AdxColumnSchema, defaultQuery } from '../types';\nimport { columnsToDefinition } from '../schema/mapper';\nimport {\n  QueryEditorExpressionType,\n  QueryEditorPropertyExpression,\n  QueryEditorExpression,\n  QueryEditorArrayExpression,\n  QueryEditorOperatorExpression,\n} from 'editor/expressions';\nimport { QueryEditorPropertyDefinition, QueryEditorPropertyType } from '../editor/types';\nimport {\n  KustoPropertyEditorSection,\n  KustoWhereEditorSection,\n  KustoValueColumnEditorSection,\n  KustoGroupByEditorSection,\n} from './VisualQueryEditorSections';\nimport { definitionToProperty } from '../editor/components/field/QueryEditorField';\nimport { isFieldExpression } from '../editor/guards';\nimport { AdxDataSource } from '../datasource';\nimport { AdxSchemaResolver } from '../schema/AdxSchemaResolver';\nimport { QueryEditorResultFormat, selectResultFormat } from '../components/QueryEditorResultFormat';\nimport { TextArea, stylesFactory } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { SchemaLoading, SchemaError, SchemaWarning } from '../components/SchemaMessages';\nimport { getTemplateSrv } from '@grafana/runtime';\n\ninterface Props {\n  database: string;\n  query: KustoQuery;\n  onChangeQuery: (query: KustoQuery) => void;\n  schema?: AdxSchema;\n  datasource: AdxDataSource;\n  templateVariableOptions: SelectableValue<string>;\n}\n\nexport const VisualQueryEditor: React.FC<Props> = props => {\n  const { query, database, datasource, schema, onChangeQuery } = props;\n  const { id: datasourceId, parseExpression, autoCompleteQuery, getSchemaMapper } = datasource;\n\n  const resultFormat = selectResultFormat(query.resultFormat);\n  const databaseName = getTemplateSrv().replace(database);\n  const tables = useTableOptions(schema, databaseName, datasource);\n  const table = useSelectedTable(tables, query, datasource);\n  const tableName = getTemplateSrv().replace(table?.property.name ?? '');\n  const tableMapping = getSchemaMapper().getMappingByValue(table?.property.name);\n  const timeshiftOptions = useTimeshiftOptions();\n\n  const tableSchema = useAsync(async () => {\n    if (!table || !table.property) {\n      return [];\n    }\n\n    const name = tableMapping?.value ?? tableName;\n    const schema = await getTableSchema(datasource, databaseName, name);\n    const expression = query.expression ?? defaultQuery.expression;\n    const from = expression.from ?? table;\n\n    onChangeQuery({\n      ...query,\n      query: parseExpression(\n        {\n          ...expression,\n          from,\n        },\n        schema\n      ),\n    });\n\n    return schema;\n  }, [datasourceId, databaseName, tableName, tableMapping?.value]);\n\n  const onAutoComplete = useCallback(\n    async (index: string, search: QueryEditorOperatorExpression) => {\n      const values = await autoCompleteQuery(\n        {\n          search,\n          database: databaseName,\n          expression: query.expression,\n          index,\n        },\n        tableSchema.value\n      );\n\n      return values.map(value => ({ value, label: value }));\n    },\n    [autoCompleteQuery, databaseName, tableSchema.value, query.expression]\n  );\n\n  const columns = useColumnOptions(tableSchema.value);\n  const groupable = useGroupableColumns(columns);\n\n  const onChangeTable = useCallback(\n    (expression: QueryEditorExpression) => {\n      if (!isFieldExpression(expression) || !table) {\n        return;\n      }\n\n      const next = {\n        ...defaultQuery.expression,\n        from: expression,\n      };\n\n      onChangeQuery({\n        ...query,\n        resultFormat: resultFormat,\n        database: database,\n        expression: next,\n      });\n    },\n    [onChangeQuery, query, resultFormat, database, table]\n  );\n\n  const onWhereChange = useCallback(\n    (expression: QueryEditorArrayExpression) => {\n      const next = {\n        ...query.expression,\n        from: table,\n        where: expression,\n      };\n\n      onChangeQuery({\n        ...query,\n        resultFormat: resultFormat,\n        database: database,\n        expression: next,\n        query: parseExpression(next, tableSchema.value),\n      });\n    },\n    [onChangeQuery, query, tableSchema.value, resultFormat, database, table, parseExpression]\n  );\n\n  const onReduceChange = useCallback(\n    (expression: QueryEditorArrayExpression) => {\n      const next = {\n        ...query.expression,\n        from: table,\n        reduce: expression,\n      };\n\n      onChangeQuery({\n        ...query,\n        resultFormat: resultFormat,\n        database: database,\n        expression: next,\n        query: parseExpression(next, tableSchema.value),\n      });\n    },\n    [onChangeQuery, query, tableSchema.value, resultFormat, database, table, parseExpression]\n  );\n\n  const onGroupByChange = useCallback(\n    (expression: QueryEditorArrayExpression) => {\n      const next = {\n        ...query.expression,\n        from: table,\n        groupBy: expression,\n      };\n\n      onChangeQuery({\n        ...query,\n        resultFormat: resultFormat,\n        database: database,\n        expression: next,\n        query: parseExpression(next, tableSchema.value),\n      });\n    },\n    [onChangeQuery, query, tableSchema.value, resultFormat, database, table, parseExpression]\n  );\n\n  const onChangeResultFormat = useCallback(\n    (format: string) => {\n      const next = {\n        ...query.expression,\n        from: table,\n      };\n\n      onChangeQuery({\n        ...query,\n        expression: next,\n        database: database,\n        resultFormat: format,\n      });\n    },\n    [onChangeQuery, table, database, query]\n  );\n\n  const onChangeTimeshift = useCallback(\n    (expression: QueryEditorExpression) => {\n      if (!isFieldExpression(expression) || !table) {\n        return;\n      }\n\n      const next = {\n        ...defaultQuery.expression,\n        ...query.expression,\n        from: table,\n        timeshift: expression,\n      };\n\n      onChangeQuery({\n        ...query,\n        resultFormat: resultFormat,\n        database: database,\n        expression: next,\n        query: parseExpression(next, tableSchema.value),\n      });\n    },\n    [onChangeQuery, query, resultFormat, database, table, parseExpression, tableSchema.value]\n  );\n\n  if (tableSchema.loading) {\n    return (\n      <>\n        <KustoPropertyEditorSection\n          templateVariableOptions={props.templateVariableOptions}\n          label=\"From\"\n          value={table}\n          fields={tables}\n          onChange={onChangeTable}\n        />\n        <SchemaLoading />\n      </>\n    );\n  }\n\n  if (tableSchema.error) {\n    return (\n      <>\n        <KustoPropertyEditorSection\n          templateVariableOptions={props.templateVariableOptions}\n          label=\"From\"\n          value={table}\n          fields={tables}\n          onChange={onChangeTable}\n        />\n        <SchemaError message={`Could not load table schema: ${tableSchema.error?.message}`} />\n      </>\n    );\n  }\n\n  if (tableSchema.value?.length === 0) {\n    return (\n      <>\n        <KustoPropertyEditorSection\n          templateVariableOptions={props.templateVariableOptions}\n          label=\"From\"\n          value={table}\n          fields={tables}\n          onChange={onChangeTable}\n        />\n        <SchemaWarning message=\"Table schema loaded successfully but without any columns\" />\n      </>\n    );\n  }\n\n  const styles = getStyles();\n\n  return (\n    <>\n      <KustoPropertyEditorSection\n        templateVariableOptions={props.templateVariableOptions}\n        label=\"From\"\n        value={table}\n        fields={tables}\n        onChange={onChangeTable}\n      >\n        <QueryEditorResultFormat\n          format={resultFormat}\n          includeAdxTimeFormat={false}\n          onChangeFormat={onChangeResultFormat}\n        />\n      </KustoPropertyEditorSection>\n      <KustoWhereEditorSection\n        templateVariableOptions={props.templateVariableOptions}\n        label=\"Where (filter)\"\n        value={query.expression?.where ?? defaultQuery.expression?.where}\n        fields={columns}\n        onChange={onWhereChange}\n        getSuggestions={onAutoComplete}\n      />\n      <KustoValueColumnEditorSection\n        templateVariableOptions={props.templateVariableOptions}\n        label=\"Aggregate\"\n        value={query.expression?.reduce ?? defaultQuery.expression?.reduce}\n        fields={columns}\n        onChange={onReduceChange}\n      />\n      <KustoGroupByEditorSection\n        templateVariableOptions={props.templateVariableOptions}\n        label=\"Group by\"\n        value={query.expression?.groupBy ?? defaultQuery.expression?.groupBy}\n        fields={groupable}\n        onChange={onGroupByChange}\n      />\n      <hr />\n      <KustoPropertyEditorSection\n        templateVariableOptions={[]}\n        label=\"Timeshift\"\n        value={query.expression?.timeshift ?? defaultQuery.expression?.timeshift}\n        fields={timeshiftOptions}\n        onChange={onChangeTimeshift}\n        allowCustom={true}\n      />\n      <div className={styles.query}>\n        <TextArea cols={80} rows={8} value={props.query.query} disabled={true} />\n      </div>\n    </>\n  );\n};\n\nconst getStyles = stylesFactory(() => {\n  return {\n    query: css`\n      margin-top: 12px;\n    `,\n  };\n});\n\nconst useGroupableColumns = (columns: QueryEditorPropertyDefinition[]): QueryEditorPropertyDefinition[] => {\n  return useMemo(() => {\n    return columns.filter(c => c.type === QueryEditorPropertyType.DateTime || QueryEditorPropertyType.String);\n  }, [columns]);\n};\n\nconst useColumnOptions = (tableSchema?: AdxColumnSchema[]): QueryEditorPropertyDefinition[] => {\n  return useMemo(() => {\n    if (!tableSchema) {\n      return [];\n    }\n    return columnsToDefinition(tableSchema);\n  }, [tableSchema]);\n};\n\nconst useSelectedTable = (\n  options: QueryEditorPropertyDefinition[],\n  query: KustoQuery,\n  datasource: AdxDataSource\n): QueryEditorPropertyExpression | undefined => {\n  const variables = datasource.variables;\n  const from = query.expression?.from?.property.name;\n\n  return useMemo(() => {\n    const selected = options.find(option => option.value === from);\n\n    if (selected) {\n      return {\n        type: QueryEditorExpressionType.Property,\n        property: definitionToProperty(selected),\n      };\n    }\n\n    const variable = variables.find(variable => variable === from);\n\n    if (variable) {\n      return {\n        type: QueryEditorExpressionType.Property,\n        property: {\n          name: variable,\n          type: QueryEditorPropertyType.String,\n        },\n      };\n    }\n\n    if (options.length > 0) {\n      return {\n        type: QueryEditorExpressionType.Property,\n        property: definitionToProperty(options[0]),\n      };\n    }\n\n    return;\n  }, [options, from, variables]);\n};\n\nconst useTableOptions = (\n  schema: AdxSchema | undefined,\n  database: string,\n  datasource: AdxDataSource\n): QueryEditorPropertyDefinition[] => {\n  const mapper = datasource.getSchemaMapper();\n\n  return useMemo(() => {\n    if (!schema || !schema.Databases) {\n      return [];\n    }\n    return mapper.getTableOptions(schema, database);\n  }, [database, schema, mapper]);\n};\n\nasync function getTableSchema(datasource: AdxDataSource, databaseName: string, tableName: string) {\n  const schemaResolver = new AdxSchemaResolver(datasource);\n  return await schemaResolver.getColumnsForTable(databaseName, tableName);\n}\n\nconst useTimeshiftOptions = (): QueryEditorPropertyDefinition[] => {\n  return useMemo((): QueryEditorPropertyDefinition[] => {\n    return [\n      {\n        label: 'No timeshift',\n        value: '',\n        type: QueryEditorPropertyType.TimeSpan,\n      },\n      {\n        label: 'Hour before',\n        value: '1h',\n        type: QueryEditorPropertyType.TimeSpan,\n      },\n      {\n        label: 'Day before',\n        value: '1d',\n        type: QueryEditorPropertyType.TimeSpan,\n      },\n      {\n        label: 'Week before',\n        value: '7d',\n        type: QueryEditorPropertyType.TimeSpan,\n      },\n    ];\n  }, []);\n};\n","import React, { useState, useCallback } from 'react';\nimport { css } from 'emotion';\nimport { Select, Button, stylesFactory, ConfirmModal } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { QueryEditorSection } from '../editor/components/QueryEditorSection';\nimport { EditorMode } from 'types';\n\ninterface Props {\n  database: string;\n  databases: Array<SelectableValue<string>>;\n  editorMode: EditorMode;\n  dirty: boolean;\n  onChangeDatabase: (databaseName: string) => void;\n  onRunQuery: () => void;\n  onToggleEditorMode: () => void;\n}\n\nexport const QueryEditorToolbar: React.FC<Props> = props => {\n  const { dirty, editorMode, onToggleEditorMode } = props;\n  const [showConfirm, setShowConfirm] = useState(false);\n  const onToggleMode = useCallback(() => {\n    if (!dirty || editorMode === EditorMode.Visual) {\n      onToggleEditorMode();\n      return;\n    }\n    setShowConfirm(true);\n  }, [setShowConfirm, onToggleEditorMode, dirty, editorMode]);\n\n  const styles = getStyles();\n\n  return (\n    <QueryEditorSection label=\"Database\">\n      <Select\n        width={30}\n        options={props.databases}\n        placeholder=\"Select database\"\n        value={props.database}\n        onChange={selected => {\n          if (!selected || !selected.value) {\n            return;\n          }\n          props.onChangeDatabase(selected.value);\n        }}\n      />\n      {props.editorMode === EditorMode.Raw && (\n        <>\n          <div className={styles.spacing} />\n          <label className=\"gf-form-label\">(Run Query: Shift+Enter, Trigger Suggestion: Ctrl+Space)</label>\n        </>\n      )}\n      <div className=\"gf-form gf-form--grow\">\n        <div className=\"gf-form-label--grow\" />\n      </div>\n      <Button variant=\"secondary\" onClick={onToggleMode}>\n        {props.editorMode === EditorMode.Visual ? 'Edit KQL' : 'Switch to builder'}\n      </Button>\n      <div className={styles.spacing} />\n      <Button variant={props.dirty ? 'primary' : 'secondary'} onClick={props.onRunQuery}>\n        Run Query\n      </Button>\n      <ConfirmModal\n        isOpen={showConfirm}\n        title=\"Are you sure?\"\n        body=\"You might loose manual changes done to the query if you go back to the visual builder.\"\n        confirmText=\"Yes, I am sure.\"\n        dismissText=\"No, continue edit query manually.\"\n        icon=\"exclamation-triangle\"\n        onConfirm={() => {\n          setShowConfirm(false);\n          props.onToggleEditorMode();\n        }}\n        onDismiss={() => setShowConfirm(false)}\n      />\n    </QueryEditorSection>\n  );\n};\n\nconst getStyles = stylesFactory(() => {\n  return {\n    spacing: css`\n      margin-right: 4px;\n    `,\n  };\n});\n","import _ from 'lodash';\nimport { QueryExpression, defaultQuery } from 'types';\nimport {\n  QueryEditorExpressionType,\n  QueryEditorOperatorExpression,\n  QueryEditorExpression,\n  QueryEditorArrayExpression,\n  QueryEditorPropertyExpression,\n  QueryEditorReduceExpression,\n  QueryEditorGroupByExpression,\n} from 'editor/expressions';\nimport { QueryEditorPropertyType, QueryEditorProperty } from 'editor/types';\n\nexport const migrateExpression = (version: string | undefined, expression: any): QueryExpression => {\n  if (looksLikeV2(expression)) {\n    return migrateV2ToV3(expression);\n  }\n  return expression ?? defaultQuery.expression;\n};\n\nexport const looksLikeV2 = (expression: any): boolean => {\n  return typeof expression?.from?.expression?.value === 'string';\n};\n\nconst migrateV2ToV3 = (expression: any): QueryExpression => {\n  if (!expression) {\n    return defaultQuery.expression;\n  }\n\n  const migrated: QueryExpression = {\n    ...defaultQuery.expression,\n  };\n\n  if (typeof expression?.from?.expression?.value === 'string') {\n    migrated.from = migrateV2PropertyExpression(expression?.from?.expression);\n  }\n\n  if (Array.isArray(expression?.where?.expression?.expressions)) {\n    migrated.where = {\n      type: QueryEditorExpressionType.And,\n      expressions: expression?.where?.expression?.expressions\n        .map(migrateV2Expression)\n        .filter(exp => !!exp)\n        .map(exp => {\n          return {\n            type: QueryEditorExpressionType.Or,\n            expressions: [exp],\n          };\n        }) as QueryEditorExpression[],\n    };\n  }\n\n  if (Array.isArray(expression?.reduce?.expression?.expressions)) {\n    migrated.reduce = migrateV2Array(expression?.reduce?.expression?.expressions);\n  }\n\n  if (Array.isArray(expression?.groupBy?.expression?.expressions)) {\n    migrated.groupBy = migrateV2Array(expression?.groupBy?.expression?.expressions);\n  }\n\n  return migrated;\n};\n\nconst migrateV2Array = (expressions: any[]): QueryEditorArrayExpression => {\n  if (!Array.isArray(expressions)) {\n    return {\n      type: QueryEditorExpressionType.And,\n      expressions: [],\n    };\n  }\n\n  return {\n    type: QueryEditorExpressionType.And,\n    expressions: expressions.map(migrateV2Expression).filter(exp => !!exp) as QueryEditorExpression[],\n  };\n};\n\nconst migrateV2Expression = (expression: any): QueryEditorExpression | undefined => {\n  switch (expression?.type) {\n    case 'fieldAndOperator':\n      return migrateV2OperatorExpression(expression);\n    case 'field':\n      return migrateV2PropertyExpression(expression);\n    case 'reduce':\n      return migrateV2ReduceExpression(expression);\n    case 'groupBy':\n      return migrateV2GroupByExpression(expression);\n    default:\n      return;\n  }\n};\n\nconst migrateV2GroupByExpression = (expression: any): QueryEditorGroupByExpression | undefined => {\n  if (expression?.type !== 'groupBy') {\n    return;\n  }\n\n  if (typeof expression?.field !== 'object') {\n    return;\n  }\n\n  if (typeof expression?.interval !== 'object') {\n    return {\n      type: QueryEditorExpressionType.GroupBy,\n      property: migrateV2Property(expression?.field),\n    };\n  }\n\n  return {\n    type: QueryEditorExpressionType.GroupBy,\n    property: migrateV2Property(expression?.field),\n    interval: migrateV2Property(expression?.interval),\n  };\n};\n\nconst migrateV2ReduceExpression = (expression: any): QueryEditorReduceExpression | undefined => {\n  if (expression?.type !== 'reduce') {\n    return;\n  }\n\n  if (typeof expression?.field !== 'object') {\n    return;\n  }\n\n  if (Array.isArray(expression?.parameters)) {\n    return {\n      type: QueryEditorExpressionType.Reduce,\n      property: migrateV2Property(expression?.field),\n      reduce: migrateV2Property(expression?.reduce),\n      parameters: expression.parameters,\n    };\n  }\n\n  return {\n    type: QueryEditorExpressionType.Reduce,\n    property: migrateV2Property(expression?.field),\n    reduce: migrateV2Property(expression?.reduce),\n  };\n};\n\nconst migrateV2PropertyExpression = (expression: any): QueryEditorPropertyExpression | undefined => {\n  if (expression?.type !== 'field') {\n    return;\n  }\n\n  if (typeof expression?.value !== 'string') {\n    return;\n  }\n\n  return {\n    type: QueryEditorExpressionType.Property,\n    property: migrateV2Property(expression),\n  };\n};\n\nconst migrateV2OperatorExpression = (expression: any): QueryEditorOperatorExpression | undefined => {\n  if (typeof expression?.field?.value !== 'string') {\n    return;\n  }\n\n  if (typeof expression?.operator?.operator?.value !== 'string') {\n    return;\n  }\n\n  return {\n    type: QueryEditorExpressionType.Operator,\n    property: migrateV2Property(expression?.field),\n    operator: {\n      name: expression?.operator?.operator?.value,\n      value: expression?.operator?.value ?? expression?.operator?.values,\n    },\n  };\n};\n\nconst migrateV2Property = (property: any): QueryEditorProperty => {\n  return {\n    type: migrateV2PropertType(property.fieldType),\n    name: property.value,\n  };\n};\n\nconst migrateV2PropertType = (type: any): QueryEditorPropertyType => {\n  switch (type) {\n    case 'boolean':\n      return QueryEditorPropertyType.Boolean;\n    case 'dateTime':\n      return QueryEditorPropertyType.DateTime;\n    case 'function':\n      return QueryEditorPropertyType.Function;\n    case 'number':\n      return QueryEditorPropertyType.Number;\n    case 'interval':\n      return QueryEditorPropertyType.Interval;\n    default:\n      return QueryEditorPropertyType.String;\n  }\n};\n","import { KustoQuery, defaultQuery } from 'types';\nimport { looksLikeV2, migrateExpression } from './expression';\n\nexport const migrateQuery = (query: KustoQuery): KustoQuery => {\n  return {\n    ...defaultQuery,\n    ...query,\n    rawMode: isRawMode(query),\n    pluginVersion: defaultQuery.pluginVersion,\n    expression: migrateExpression(defaultQuery.pluginVersion, query.expression),\n  };\n};\n\nexport const needsToBeMigrated = (query: KustoQuery): boolean => {\n  if (!query) {\n    return false;\n  }\n\n  if (!query.pluginVersion) {\n    return true;\n  }\n\n  if (!query.querySource) {\n    return true;\n  }\n\n  if (looksLikeV2(query.expression)) {\n    return true;\n  }\n\n  return false;\n};\n\nfunction isRawMode(query: KustoQuery): boolean {\n  if (query.rawMode === undefined && query.query && !query.expression?.from) {\n    return true;\n  }\n  return query.rawMode || false;\n}\n","import React, { useMemo, useCallback, useEffect } from 'react';\nimport { useAsync } from 'react-use';\nimport { QueryEditorProps, PanelData } from '@grafana/data';\n// Hack for issue: https://github.com/grafana/grafana/issues/26512\nimport {} from '@emotion/core';\nimport { AdxDataSource } from './datasource';\nimport { KustoQuery, AdxDataSourceOptions, AdxSchema, EditorMode } from 'types';\nimport { QueryEditorPropertyDefinition } from './editor/types';\nimport { RawQueryEditor } from './components/RawQueryEditor';\nimport { databaseToDefinition } from './schema/mapper';\nimport { VisualQueryEditor } from './components/VisualQueryEditor';\nimport { QueryEditorToolbar } from './components/QueryEditorToolbar';\nimport { SchemaLoading } from 'components/SchemaMessages';\nimport { needsToBeMigrated, migrateQuery } from 'migrations/query';\n\ntype Props = QueryEditorProps<AdxDataSource, KustoQuery, AdxDataSourceOptions>;\n\nexport const QueryEditor: React.FC<Props> = props => {\n  const { datasource, onChange, onRunQuery, query } = props;\n  const executedQuery = useExecutedQuery(props.data);\n  const executedQueryError = useExecutedQueryError(props.data);\n  const dirty = useDirty(props.query.query, executedQuery);\n  const rawMode = isRawMode(props);\n  const schema = useAsync(() => datasource.getSchema(false), [datasource.id]);\n  const templateVariables = useTemplateVariables(datasource);\n  const databases = useDatabaseOptions(schema.value);\n  const database = useSelectedDatabase(databases, props.query, datasource);\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    if (needsToBeMigrated(query)) {\n      onChange(migrateQuery(query));\n      onRunQuery();\n    }\n\n    if (isNewQuery(props) && isRawDefaultEditorMode(props)) {\n      onChange({\n        ...props.query,\n        rawMode: true,\n        querySource: EditorMode.Raw,\n      });\n      onRunQuery();\n    }\n  }, []);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  const onChangeDatabase = useCallback(\n    (database: string) => {\n      onChange({\n        ...query,\n        database,\n      });\n    },\n    [onChange, query]\n  );\n\n  const onToggleEditorMode = useCallback(() => {\n    onChange({\n      ...query,\n      rawMode: !rawMode,\n      querySource: rawMode ? EditorMode.Visual : EditorMode.Raw,\n    });\n  }, [onChange, query, rawMode]);\n\n  if (schema.loading) {\n    return <SchemaLoading />;\n  }\n\n  if (schema.error) {\n    if ((schema.error as any)?.data?.Message) {\n      return (\n        <div className=\"gf-form\">\n          <pre className=\"gf-form-pre alert alert-error\">\n            Could not load datasource schema due too: {(schema.error as any)?.data?.Message}\n          </pre>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"gf-form\">\n        <pre className=\"gf-form-pre alert alert-error\">Could not load datasource schema: {String(schema.error)}</pre>\n      </div>\n    );\n  }\n\n  if (databases.length === 0) {\n    return (\n      <div className=\"gf-form\">\n        <pre className=\"gf-form-pre alert alert-warning\">\n          Datasource schema loaded but without any databases and tables, please try again..\n        </pre>\n      </div>\n    );\n  }\n\n  const editorMode = rawMode ? EditorMode.Raw : EditorMode.Visual;\n\n  return (\n    <>\n      {executedQueryError && (\n        <div className=\"gf-form\">\n          <pre className=\"gf-form-pre alert alert-warning\">Failed to execute query: {executedQueryError}</pre>\n        </div>\n      )}\n      <QueryEditorToolbar\n        onRunQuery={props.onRunQuery}\n        onToggleEditorMode={onToggleEditorMode}\n        editorMode={editorMode}\n        onChangeDatabase={onChangeDatabase}\n        database={database}\n        databases={[templateVariables, ...databases]}\n        dirty={dirty}\n      />\n      {editorMode === EditorMode.Raw && (\n        <RawQueryEditor\n          {...props}\n          schema={schema.value}\n          templateVariableOptions={templateVariables}\n          lastQuery={executedQuery}\n          database={database}\n        />\n      )}\n      {editorMode === EditorMode.Visual && (\n        <VisualQueryEditor\n          datasource={datasource}\n          database={database}\n          onChangeQuery={props.onChange}\n          query={props.query}\n          schema={schema.value}\n          templateVariableOptions={templateVariables}\n        />\n      )}\n    </>\n  );\n};\n\nconst useSelectedDatabase = (\n  options: QueryEditorPropertyDefinition[],\n  query: KustoQuery,\n  datasource: AdxDataSource\n): string => {\n  return useMemo(() => {\n    const selected = options.find(option => option.value === query.database);\n\n    if (selected) {\n      return selected.value;\n    }\n\n    const variable = datasource.variables.find(variable => variable === query.database);\n\n    if (variable) {\n      return variable;\n    }\n\n    if (options.length > 0) {\n      return options[0].value;\n    }\n\n    return '';\n  }, [options, query.database, datasource.variables]);\n};\n\nconst useDatabaseOptions = (schema?: AdxSchema): QueryEditorPropertyDefinition[] => {\n  return useMemo(() => {\n    const databases: QueryEditorPropertyDefinition[] = [];\n\n    if (!schema || !schema.Databases) {\n      return databases;\n    }\n\n    for (const name of Object.keys(schema.Databases)) {\n      const database = schema.Databases[name];\n      databases.push(databaseToDefinition(database));\n    }\n\n    return databases;\n  }, [schema]);\n};\n\nconst useExecutedQuery = (data?: PanelData): string => {\n  return useMemo(() => {\n    return data?.series[0]?.meta?.executedQueryString ?? '';\n  }, [data]);\n};\n\nconst useDirty = (query: string, executedQuery: string): boolean => {\n  return useMemo(() => {\n    // we need to interpolate/deinterpolate it so we compare same things.\n    return query !== executedQuery;\n  }, [query, executedQuery]);\n};\n\nconst useExecutedQueryError = (data?: PanelData): string | undefined => {\n  return useMemo(() => {\n    const kustoError = data?.series[0]?.meta?.custom?.KustoError;\n\n    if (data?.error && !kustoError) {\n      if (data.error.message) {\n        return `${data.error.message}`;\n      }\n      return `${data.error}`;\n    }\n\n    return kustoError;\n  }, [data]);\n};\n\nconst useTemplateVariables = (datasource: AdxDataSource) => {\n  const { variables } = datasource;\n  return useMemo(() => {\n    return {\n      label: 'Template Variables',\n      expanded: false,\n      options: variables.map(variable => {\n        return { label: variable, value: variable };\n      }),\n    };\n  }, [variables]);\n};\n\nfunction isRawMode(props: Props): boolean {\n  if (props.query.rawMode === undefined && props.query.query && !props.query.expression?.from) {\n    return true;\n  }\n\n  return props.query.rawMode || false;\n}\n\nfunction isNewQuery(props: Props): boolean {\n  return props.query.rawMode === undefined;\n}\n\nfunction isRawDefaultEditorMode(props: Props): boolean {\n  return props.datasource.getDefaultEditorMode() === EditorMode.Raw;\n}\n","import { isNumber } from 'lodash';\n\nconst versionPattern = /^(\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))?(?:-([0-9A-Za-z\\.]+))?/;\n\nexport class SemVersion {\n  major: number;\n  minor: number;\n  patch: number;\n  meta: string;\n\n  constructor(version: string) {\n    this.major = 0;\n    this.minor = 0;\n    this.patch = 0;\n    this.meta = '';\n\n    const match = versionPattern.exec(version);\n    if (match) {\n      this.major = Number(match[1]);\n      this.minor = Number(match[2] || 0);\n      this.patch = Number(match[3] || 0);\n      this.meta = match[4];\n    }\n  }\n\n  isGtOrEq(version: string): boolean {\n    const compared = new SemVersion(version);\n\n    for (let i = 0; i < this.comparable.length; ++i) {\n      if (this.comparable[i] > compared.comparable[i]) {\n        return true;\n      }\n      if (this.comparable[i] < compared.comparable[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  isValid(): boolean {\n    return isNumber(this.major);\n  }\n\n  get comparable() {\n    return [this.major, this.minor, this.patch];\n  }\n}\n\nexport function isVersionGtOrEq(a: string, b: string): boolean {\n  const aSemver = new SemVersion(a);\n  return aSemver.isGtOrEq(b);\n}\n","import { AdxDataSource } from './datasource';\nimport config from 'grafana/app/core/config';\nimport { isVersionGtOrEq } from './version';\nimport { EditorMode } from './types';\n\nconst dataConsistency = {\n  strongconsistency: 'Strong',\n  weakconsistency: 'Weak',\n};\n\nexport class KustoDBConfigCtrl {\n  static templateUrl = 'partials/config.html';\n\n  current: any;\n  suggestUrl: string;\n  dataConsistency: any[];\n  datasource: AdxDataSource | undefined;\n  databases: any[];\n  schemaMappingOptions: any[];\n  mapping: any;\n  hasRequiredGrafanaVersion: boolean;\n  loading = false;\n  schemaError = false;\n  editorModes: Array<{ value: string; label: string }>;\n\n  /** @ngInject */\n  constructor(private $scope) {\n    this.hasRequiredGrafanaVersion = this.hasMinVersion();\n    this.suggestUrl = 'https://yourcluster.kusto.windows.net';\n    $scope.getSuggestUrls = () => {\n      return [this.suggestUrl];\n    };\n\n    this.databases = [];\n    this.schemaMappingOptions = [];\n\n    if (!Array.isArray(this.current.jsonData?.schemaMappings)) {\n      this.current.jsonData.schemaMappings = [];\n    }\n\n    if (this.current.id) {\n      this.current.url = 'api/datasources/proxy/' + this.current.id;\n      this.datasource = new AdxDataSource(this.current);\n      this.refreshSchema();\n    }\n\n    this.editorModes = Object.keys(EditorMode)\n      .filter(key => isNaN(parseInt(key, 10)))\n      .map(key => ({ value: EditorMode[key], label: key }));\n\n    if (!this.current.jsonData?.defaultEditorMode) {\n      this.current.jsonData.defaultEditorMode = this.editorModes[0].value;\n    }\n\n    this.dataConsistency = Object.keys(dataConsistency).map(value => ({\n      value,\n      label: dataConsistency[value],\n    }));\n\n    if (!this.current.jsonData?.dataConsistency) {\n      this.current.jsonData.dataConsistency = this.dataConsistency[0].value;\n    }\n  }\n\n  addSchemaMapping() {\n    if (!this.mapping) {\n      return;\n    }\n\n    this.current.jsonData.schemaMappings.push({\n      database: this.mapping.database,\n      type: this.mapping.type,\n      name: this.mapping.value,\n      displayName: this.mapping.name,\n      value: this.formatMappingValue(this.mapping),\n    });\n\n    this.mapping = undefined;\n  }\n\n  removeSchemaMapping(index: number) {\n    this.current.jsonData.schemaMappings.splice(index, 1);\n  }\n\n  formatMappingValue(mapping: any): string {\n    switch (mapping?.type) {\n      case 'function':\n        const input = mapping.input ?? [];\n        return `${mapping.value}(${input.map(i => i.Value).join(',')})`;\n      default:\n        return mapping.value;\n    }\n  }\n\n  formatMappingText(schemaMapping: any): string {\n    return `${schemaMapping.database}/${schemaMapping.type}s/${schemaMapping.value}`;\n  }\n\n  refreshSchema() {\n    if (!this.datasource) {\n      return;\n    }\n    this.loading = true;\n    const databases: any[] = [];\n    const schemaMappingOptions: any[] = [];\n\n    this.datasource\n      .getSchema(true)\n      .then(schema => {\n        for (const dbName of Object.keys(schema.Databases)) {\n          const database = schema.Databases[dbName];\n\n          databases.push({\n            text: database.Name,\n            value: database.Name,\n          });\n\n          for (const tableName of Object.keys(database.Tables)) {\n            const table = database.Tables[tableName];\n\n            schemaMappingOptions.push({\n              type: 'table',\n              text: `${database.Name}/tables/${table.Name}`,\n              value: table.Name,\n              name: table.Name,\n              database: database.Name,\n            });\n          }\n\n          for (const functionName of Object.keys(database.Functions)) {\n            const func = database.Functions[functionName];\n\n            schemaMappingOptions.push({\n              type: 'function',\n              text: `${database.Name}/functions/${func.Name}`,\n              value: func.Name,\n              name: func.Name,\n              input: func.InputParameters,\n              database: database.Name,\n            });\n          }\n\n          for (const viewName of Object.keys(database.MaterializedViews)) {\n            const view = database.MaterializedViews[viewName];\n\n            schemaMappingOptions.push({\n              type: 'materializedView',\n              text: `${database.Name}/materializedViews/${view.Name}`,\n              value: view.Name,\n              name: view.Name,\n              database: database.Name,\n            });\n          }\n        }\n\n        if (!this.current.jsonData.defaultDatabase && this.databases.length) {\n          this.current.jsonData.defaultDatabase = this.databases[0].value;\n        }\n\n        this.databases = databases;\n        this.schemaMappingOptions = schemaMappingOptions;\n        this.loading = false;\n        this.schemaError = false;\n        this.$scope.$digest();\n      })\n      .catch(e => {\n        console.error('ADX failed to fetch schema: ', e);\n        this.loading = false;\n        this.schemaError = true;\n        this.$scope.$digest();\n      });\n  }\n\n  hasMinVersion(): boolean {\n    return (\n      isVersionGtOrEq(config.buildInfo.latestVersion, '5.3') ||\n      config.buildInfo.version === '5.3.0-beta1' ||\n      config.buildInfo.version === '5.3.0-pre1'\n    );\n  }\n\n  showMinVersionWarning() {\n    return !this.hasRequiredGrafanaVersion;\n  }\n}\n","/* eslint-disable */\n/* tslint:disable */\n///<reference path=\"../../node_modules/monaco-editor/monaco.d.ts\" />\n/* tslint:enable */\n/* eslint-enable */\n\nimport angular from 'angular';\nimport KustoCodeEditor from './kusto_code_editor';\nimport config from 'grafana/app/core/config';\n\nconst editorTemplate = `<div id=\"content\" tabindex=\"0\" style=\"width: 100%; height: 150px\"></div>`;\n\nfunction link(scope, elem, attrs) {\n  const containerDiv = elem.find('#content')[0];\n\n  if (!window.hasOwnProperty('monaco')) {\n    //(window as any).monaco = import(/* webpackChunkName: \"/monaco.min\" */ '../lib/monaco.min.js').then(() => {\n    (window as any).System.import(`/${scope.pluginBaseUrl}/libs/monaco.min.js`).then(() => {\n      setTimeout(() => {\n        initMonaco(containerDiv, scope);\n      }, 100);\n    });\n  } else {\n    setTimeout(() => {\n      initMonaco(containerDiv, scope);\n    }, 100);\n  }\n\n  containerDiv.onblur = () => {\n    scope.onChange();\n  };\n\n  containerDiv.onkeydown = evt => {\n    if (evt.key === 'Escape') {\n      evt.stopPropagation();\n      return true;\n    }\n\n    return undefined;\n  };\n\n  function initMonaco(containerDiv, scope) {\n    const kustoCodeEditor = new KustoCodeEditor(containerDiv, scope.defaultTimeField, scope.getSchema, config);\n    kustoCodeEditor.initMonaco(scope.content);\n\n    /* tslint:disable:no-bitwise */\n    kustoCodeEditor.addCommand(monaco.KeyMod.Shift | monaco.KeyCode.Enter, () => {\n      const newValue = kustoCodeEditor.getValue();\n      scope.content = newValue;\n      scope.onChange();\n    });\n    /* tslint:enable:no-bitwise */\n\n    // Sync with outer scope - update editor content if model has been changed from outside of directive.\n    scope.$watch('content', (newValue, oldValue) => {\n      const editorValue = kustoCodeEditor.getValue();\n      if (newValue !== editorValue && newValue !== oldValue) {\n        scope.$$postDigest(() => {\n          kustoCodeEditor.setEditorContent(newValue);\n        });\n      }\n    });\n\n    kustoCodeEditor.setOnDidChangeModelContent(() => {\n      scope.$apply(() => {\n        const newValue = kustoCodeEditor.getValue();\n        scope.content = newValue;\n      });\n    });\n\n    scope.$on('$destroy', () => {\n      kustoCodeEditor.disposeMonaco();\n    });\n\n    window.onresize = () => {\n      kustoCodeEditor.resize();\n    };\n  }\n}\n\n/** @ngInject */\nexport function kustoMonacoEditorDirective() {\n  return {\n    restrict: 'E',\n    template: editorTemplate,\n    scope: {\n      content: '=',\n      onChange: '&',\n      getSchema: '&',\n      defaultTimeField: '@',\n      pluginBaseUrl: '@',\n    },\n    link: link,\n  };\n}\n\nangular.module('grafana.controllers').directive('kustoMonacoEditor', kustoMonacoEditorDirective);\n","import './monaco/kusto_monaco_editor';\nexport class KustoDBAnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n  datasource: any;\n  annotation: any;\n  databases: any[];\n  showHelp = false;\n\n  defaultQuery =\n    '<your table>\\n| where $__timeFilter() \\n| project TimeGenerated, Text=YourTitleColumn, Tags=\"tag1,tag2\"';\n\n  /** @ngInject */\n  constructor() {\n    this.annotation.query = this.annotation.query || this.defaultQuery;\n    this.annotation.resultFormat = 'table';\n    this.databases = this.getDatabases();\n  }\n\n  getDatabases() {\n    if (this.databases && this.databases.length > 0) {\n      return this.databases;\n    }\n\n    return this.datasource\n      .getDatabases()\n      .then(list => {\n        this.databases = list;\n        if (list.length > 0 && !this.annotation.database) {\n          this.annotation.database = list[0].value;\n        }\n        return this.databases;\n      })\n      .catch(err => {});\n  }\n}\n","import { DataSourcePlugin } from '@grafana/data';\nimport { AdxDataSource } from './datasource';\nimport { QueryEditor } from './QueryEditor';\nimport { KustoDBConfigCtrl } from 'config_ctrl';\nimport { KustoDBAnnotationsQueryCtrl } from './annotations_query_ctrl';\nimport { AdxDataSourceOptions, KustoQuery } from './types';\n\nexport const plugin = new DataSourcePlugin<AdxDataSource, KustoQuery, AdxDataSourceOptions>(AdxDataSource)\n  .setConfigCtrl(KustoDBConfigCtrl)\n  .setAnnotationQueryCtrl(KustoDBAnnotationsQueryCtrl)\n  .setQueryEditor(QueryEditor);\n"],"sourceRoot":""}